//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Esmart.Infrastructure.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EsmartEntitiess : DbContext
    {
        public EsmartEntitiess()
            : base("name=EsmartEntitiess")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account_Transactions> Account_Transactions { get; set; }
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<Bank_Branch_Master> Bank_Branch_Master { get; set; }
        public virtual DbSet<Bank_Master> Bank_Master { get; set; }
        public virtual DbSet<Delivery_Order_Note> Delivery_Order_Note { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Enterprise> Enterprises { get; set; }
        public virtual DbSet<Goods_Receipt_Note> Goods_Receipt_Note { get; set; }
        public virtual DbSet<GradeMaster> GradeMasters { get; set; }
        public virtual DbSet<JobCatalouge> JobCatalouges { get; set; }
        public virtual DbSet<Logindb> Logindbs { get; set; }
        public virtual DbSet<m_ApprovalLevel> m_ApprovalLevel { get; set; }
        public virtual DbSet<m_CityMaster> m_CityMaster { get; set; }
        public virtual DbSet<m_Countries> m_Countries { get; set; }
        public virtual DbSet<m_Districts> m_Districts { get; set; }
        public virtual DbSet<m_EsmartServices> m_EsmartServices { get; set; }
        public virtual DbSet<m_StateMaster> m_StateMaster { get; set; }
        public virtual DbSet<PagePermission> PagePermissions { get; set; }
        public virtual DbSet<Purchase_Invoice> Purchase_Invoice { get; set; }
        public virtual DbSet<Purchase_Order> Purchase_Order { get; set; }
        public virtual DbSet<Purchase_Quotation> Purchase_Quotation { get; set; }
        public virtual DbSet<Purchase_Requisition> Purchase_Requisition { get; set; }
        public virtual DbSet<Sales_Invoice> Sales_Invoice { get; set; }
        public virtual DbSet<Sales_Order> Sales_Order { get; set; }
        public virtual DbSet<Sales_Quotation> Sales_Quotation { get; set; }
        public virtual DbSet<Sales_Requisition> Sales_Requisition { get; set; }
        public virtual DbSet<StepMaster> StepMasters { get; set; }
        public virtual DbSet<Suppler_Requisition> Suppler_Requisition { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tbl_Account_Transactions> tbl_Account_Transactions { get; set; }
        public virtual DbSet<tbl_AccountsSegments> tbl_AccountsSegments { get; set; }
        public virtual DbSet<tbl_Assets> tbl_Assets { get; set; }
        public virtual DbSet<tbl_BankMaster> tbl_BankMaster { get; set; }
        public virtual DbSet<tbl_branches> tbl_branches { get; set; }
        public virtual DbSet<tbl_ChartOfAccount> tbl_ChartOfAccount { get; set; }
        public virtual DbSet<tbl_Courses> tbl_Courses { get; set; }
        public virtual DbSet<tbl_Customers> tbl_Customers { get; set; }
        public virtual DbSet<tbl_Employees> tbl_Employees { get; set; }
        public virtual DbSet<tbl_Employers> tbl_Employers { get; set; }
        public virtual DbSet<tbl_ETUserPermissions> tbl_ETUserPermissions { get; set; }
        public virtual DbSet<tbl_Floors> tbl_Floors { get; set; }
        public virtual DbSet<tbl_GroupServiceMapping> tbl_GroupServiceMapping { get; set; }
        public virtual DbSet<tbl_HintQuestions> tbl_HintQuestions { get; set; }
        public virtual DbSet<tbl_InvoiceDetails> tbl_InvoiceDetails { get; set; }
        public virtual DbSet<tbl_Item_Category> tbl_Item_Category { get; set; }
        public virtual DbSet<tbl_Item_Group> tbl_Item_Group { get; set; }
        public virtual DbSet<tbl_JobCatalouge> tbl_JobCatalouge { get; set; }
        public virtual DbSet<tbl_JobCategory> tbl_JobCategory { get; set; }
        public virtual DbSet<tbl_JobClass> tbl_JobClass { get; set; }
        public virtual DbSet<tbl_JobEducation> tbl_JobEducation { get; set; }
        public virtual DbSet<tbl_JobGroup> tbl_JobGroup { get; set; }
        public virtual DbSet<tbl_Logins> tbl_Logins { get; set; }
        public virtual DbSet<tbl_LoginTrack> tbl_LoginTrack { get; set; }
        public virtual DbSet<tbl_MaterialRequest> tbl_MaterialRequest { get; set; }
        public virtual DbSet<tbl_MaterialRequest_Transactions> tbl_MaterialRequest_Transactions { get; set; }
        public virtual DbSet<tbl_OrganizationUnits> tbl_OrganizationUnits { get; set; }
        public virtual DbSet<tbl_POrderDetails> tbl_POrderDetails { get; set; }
        public virtual DbSet<tbl_POrderTransaction> tbl_POrderTransaction { get; set; }
        public virtual DbSet<tbl_PQShippingDetails> tbl_PQShippingDetails { get; set; }
        public virtual DbSet<tbl_PQuotationTransaction> tbl_PQuotationTransaction { get; set; }
        public virtual DbSet<tbl_PrimarySkills> tbl_PrimarySkills { get; set; }
        public virtual DbSet<tbl_Projects> tbl_Projects { get; set; }
        public virtual DbSet<tbl_PurchaseQuotation> tbl_PurchaseQuotation { get; set; }
        public virtual DbSet<tbl_PurchaseReq_Transactions> tbl_PurchaseReq_Transactions { get; set; }
        public virtual DbSet<tbl_PurchaseReqisition> tbl_PurchaseReqisition { get; set; }
        public virtual DbSet<tbl_Qualification> tbl_Qualification { get; set; }
        public virtual DbSet<tbl_Racks> tbl_Racks { get; set; }
        public virtual DbSet<tbl_Rows> tbl_Rows { get; set; }
        public virtual DbSet<tbl_Specialization> tbl_Specialization { get; set; }
        public virtual DbSet<tbl_Stock_Items> tbl_Stock_Items { get; set; }
        public virtual DbSet<tbl_Stock_Items_Transactions> tbl_Stock_Items_Transactions { get; set; }
        public virtual DbSet<tbl_Suppliers> tbl_Suppliers { get; set; }
        public virtual DbSet<tbl_UnitOfMeasure> tbl_UnitOfMeasure { get; set; }
        public virtual DbSet<tbl_UserGroups> tbl_UserGroups { get; set; }
        public virtual DbSet<tbl_Vouchers> tbl_Vouchers { get; set; }
        public virtual DbSet<tbl_Warehouse> tbl_Warehouse { get; set; }
        public virtual DbSet<Voucher> Vouchers { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<WarehouseFloor> WarehouseFloors { get; set; }
        public virtual DbSet<WarehouseRack> WarehouseRacks { get; set; }
        public virtual DbSet<WarehouseRow> WarehouseRows { get; set; }
        public virtual DbSet<xxEnterpris> xxEnterprises { get; set; }
        public virtual DbSet<Allocation> Allocations { get; set; }
        public virtual DbSet<GridViewDynamicData> GridViewDynamicDatas { get; set; }
        public virtual DbSet<Item_Category> Item_Category { get; set; }
        public virtual DbSet<Item_Group> Item_Group { get; set; }
        public virtual DbSet<JobCategory> JobCategories { get; set; }
        public virtual DbSet<JobClass> JobClasses { get; set; }
        public virtual DbSet<Purchase_Invoice_Items> Purchase_Invoice_Items { get; set; }
        public virtual DbSet<Purchase_Order_Items> Purchase_Order_Items { get; set; }
        public virtual DbSet<Purchase_Quotation_Items> Purchase_Quotation_Items { get; set; }
        public virtual DbSet<Purchase_Requisition_Items> Purchase_Requisition_Items { get; set; }
        public virtual DbSet<Sales_Requisition_Item> Sales_Requisition_Item { get; set; }
        public virtual DbSet<Sales_Requisition_Items> Sales_Requisition_Items { get; set; }
        public virtual DbSet<tbl_ErrorTrack> tbl_ErrorTrack { get; set; }
    
        public virtual int Get_Purchase_ItemsDetails(string quoteID, Nullable<int> stateFlag)
        {
            var quoteIDParameter = quoteID != null ?
                new ObjectParameter("QuoteID", quoteID) :
                new ObjectParameter("QuoteID", typeof(string));
    
            var stateFlagParameter = stateFlag.HasValue ?
                new ObjectParameter("StateFlag", stateFlag) :
                new ObjectParameter("StateFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_Purchase_ItemsDetails", quoteIDParameter, stateFlagParameter);
        }
    
        public virtual int Get_Sales_ItemsDetails(string quoteID, Nullable<int> stateFalg)
        {
            var quoteIDParameter = quoteID != null ?
                new ObjectParameter("QuoteID", quoteID) :
                new ObjectParameter("QuoteID", typeof(string));
    
            var stateFalgParameter = stateFalg.HasValue ?
                new ObjectParameter("StateFalg", stateFalg) :
                new ObjectParameter("StateFalg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_Sales_ItemsDetails", quoteIDParameter, stateFalgParameter);
        }
    
        public virtual int getgst(Nullable<int> cgst)
        {
            var cgstParameter = cgst.HasValue ?
                new ObjectParameter("cgst", cgst) :
                new ObjectParameter("cgst", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getgst", cgstParameter);
        }
    
        public virtual int gst(Nullable<int> cgst)
        {
            var cgstParameter = cgst.HasValue ?
                new ObjectParameter("cgst", cgst) :
                new ObjectParameter("cgst", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("gst", cgstParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> items(ObjectParameter enterpriseId, ObjectParameter eName)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("items", enterpriseId, eName);
        }
    
        public virtual int NewSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewSelectCommand");
        }
    
        public virtual int sp_AddColumn(string tblName, string colName, string dataType, Nullable<bool> dCStatus, string dCValue)
        {
            var tblNameParameter = tblName != null ?
                new ObjectParameter("tblName", tblName) :
                new ObjectParameter("tblName", typeof(string));
    
            var colNameParameter = colName != null ?
                new ObjectParameter("colName", colName) :
                new ObjectParameter("colName", typeof(string));
    
            var dataTypeParameter = dataType != null ?
                new ObjectParameter("dataType", dataType) :
                new ObjectParameter("dataType", typeof(string));
    
            var dCStatusParameter = dCStatus.HasValue ?
                new ObjectParameter("dCStatus", dCStatus) :
                new ObjectParameter("dCStatus", typeof(bool));
    
            var dCValueParameter = dCValue != null ?
                new ObjectParameter("dCValue", dCValue) :
                new ObjectParameter("dCValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddColumn", tblNameParameter, colNameParameter, dataTypeParameter, dCStatusParameter, dCValueParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_exam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_exam");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spEnterprise(string enterpriseID, string enterpriseName, Nullable<bool> parentEnterprise, string permanentRegistration, string loginID, string password, Nullable<System.DateTime> dateOfInception, Nullable<System.DateTime> dateOfExpiry, string country, string state, string city, string address_1, string address_2, string postBox, string zipCode, string landLine, string fax, string emailAddress, string website, string aR_EmployeeID, string aR_FirstName, string aR_MiddleName, string aR_LastName, string aR_Email, string aR_Designation, string aR_Phone, string aR_Fax, string aR_MobileNo, string aR_PreferredContactPerson, string oCP_EmployeeID, string oCP_FirstName, string oCP_MiddleName, string oCP_LastName, string oCP_Email, string oCP_Designation, string oCP_Phone, string oCP_Fax, string oCP_MobileNo, string oCP_PreferredContactPerson)
        {
            var enterpriseIDParameter = enterpriseID != null ?
                new ObjectParameter("EnterpriseID", enterpriseID) :
                new ObjectParameter("EnterpriseID", typeof(string));
    
            var enterpriseNameParameter = enterpriseName != null ?
                new ObjectParameter("EnterpriseName", enterpriseName) :
                new ObjectParameter("EnterpriseName", typeof(string));
    
            var parentEnterpriseParameter = parentEnterprise.HasValue ?
                new ObjectParameter("ParentEnterprise", parentEnterprise) :
                new ObjectParameter("ParentEnterprise", typeof(bool));
    
            var permanentRegistrationParameter = permanentRegistration != null ?
                new ObjectParameter("PermanentRegistration", permanentRegistration) :
                new ObjectParameter("PermanentRegistration", typeof(string));
    
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dateOfInceptionParameter = dateOfInception.HasValue ?
                new ObjectParameter("DateOfInception", dateOfInception) :
                new ObjectParameter("DateOfInception", typeof(System.DateTime));
    
            var dateOfExpiryParameter = dateOfExpiry.HasValue ?
                new ObjectParameter("DateOfExpiry", dateOfExpiry) :
                new ObjectParameter("DateOfExpiry", typeof(System.DateTime));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var address_1Parameter = address_1 != null ?
                new ObjectParameter("Address_1", address_1) :
                new ObjectParameter("Address_1", typeof(string));
    
            var address_2Parameter = address_2 != null ?
                new ObjectParameter("Address_2", address_2) :
                new ObjectParameter("Address_2", typeof(string));
    
            var postBoxParameter = postBox != null ?
                new ObjectParameter("PostBox", postBox) :
                new ObjectParameter("PostBox", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var landLineParameter = landLine != null ?
                new ObjectParameter("LandLine", landLine) :
                new ObjectParameter("LandLine", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var aR_EmployeeIDParameter = aR_EmployeeID != null ?
                new ObjectParameter("AR_EmployeeID", aR_EmployeeID) :
                new ObjectParameter("AR_EmployeeID", typeof(string));
    
            var aR_FirstNameParameter = aR_FirstName != null ?
                new ObjectParameter("AR_FirstName", aR_FirstName) :
                new ObjectParameter("AR_FirstName", typeof(string));
    
            var aR_MiddleNameParameter = aR_MiddleName != null ?
                new ObjectParameter("AR_MiddleName", aR_MiddleName) :
                new ObjectParameter("AR_MiddleName", typeof(string));
    
            var aR_LastNameParameter = aR_LastName != null ?
                new ObjectParameter("AR_LastName", aR_LastName) :
                new ObjectParameter("AR_LastName", typeof(string));
    
            var aR_EmailParameter = aR_Email != null ?
                new ObjectParameter("AR_Email", aR_Email) :
                new ObjectParameter("AR_Email", typeof(string));
    
            var aR_DesignationParameter = aR_Designation != null ?
                new ObjectParameter("AR_Designation", aR_Designation) :
                new ObjectParameter("AR_Designation", typeof(string));
    
            var aR_PhoneParameter = aR_Phone != null ?
                new ObjectParameter("AR_Phone", aR_Phone) :
                new ObjectParameter("AR_Phone", typeof(string));
    
            var aR_FaxParameter = aR_Fax != null ?
                new ObjectParameter("AR_Fax", aR_Fax) :
                new ObjectParameter("AR_Fax", typeof(string));
    
            var aR_MobileNoParameter = aR_MobileNo != null ?
                new ObjectParameter("AR_MobileNo", aR_MobileNo) :
                new ObjectParameter("AR_MobileNo", typeof(string));
    
            var aR_PreferredContactPersonParameter = aR_PreferredContactPerson != null ?
                new ObjectParameter("AR_PreferredContactPerson", aR_PreferredContactPerson) :
                new ObjectParameter("AR_PreferredContactPerson", typeof(string));
    
            var oCP_EmployeeIDParameter = oCP_EmployeeID != null ?
                new ObjectParameter("OCP_EmployeeID", oCP_EmployeeID) :
                new ObjectParameter("OCP_EmployeeID", typeof(string));
    
            var oCP_FirstNameParameter = oCP_FirstName != null ?
                new ObjectParameter("OCP_FirstName", oCP_FirstName) :
                new ObjectParameter("OCP_FirstName", typeof(string));
    
            var oCP_MiddleNameParameter = oCP_MiddleName != null ?
                new ObjectParameter("OCP_MiddleName", oCP_MiddleName) :
                new ObjectParameter("OCP_MiddleName", typeof(string));
    
            var oCP_LastNameParameter = oCP_LastName != null ?
                new ObjectParameter("OCP_LastName", oCP_LastName) :
                new ObjectParameter("OCP_LastName", typeof(string));
    
            var oCP_EmailParameter = oCP_Email != null ?
                new ObjectParameter("OCP_Email", oCP_Email) :
                new ObjectParameter("OCP_Email", typeof(string));
    
            var oCP_DesignationParameter = oCP_Designation != null ?
                new ObjectParameter("OCP_Designation", oCP_Designation) :
                new ObjectParameter("OCP_Designation", typeof(string));
    
            var oCP_PhoneParameter = oCP_Phone != null ?
                new ObjectParameter("OCP_Phone", oCP_Phone) :
                new ObjectParameter("OCP_Phone", typeof(string));
    
            var oCP_FaxParameter = oCP_Fax != null ?
                new ObjectParameter("OCP_Fax", oCP_Fax) :
                new ObjectParameter("OCP_Fax", typeof(string));
    
            var oCP_MobileNoParameter = oCP_MobileNo != null ?
                new ObjectParameter("OCP_MobileNo", oCP_MobileNo) :
                new ObjectParameter("OCP_MobileNo", typeof(string));
    
            var oCP_PreferredContactPersonParameter = oCP_PreferredContactPerson != null ?
                new ObjectParameter("OCP_PreferredContactPerson", oCP_PreferredContactPerson) :
                new ObjectParameter("OCP_PreferredContactPerson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEnterprise", enterpriseIDParameter, enterpriseNameParameter, parentEnterpriseParameter, permanentRegistrationParameter, loginIDParameter, passwordParameter, dateOfInceptionParameter, dateOfExpiryParameter, countryParameter, stateParameter, cityParameter, address_1Parameter, address_2Parameter, postBoxParameter, zipCodeParameter, landLineParameter, faxParameter, emailAddressParameter, websiteParameter, aR_EmployeeIDParameter, aR_FirstNameParameter, aR_MiddleNameParameter, aR_LastNameParameter, aR_EmailParameter, aR_DesignationParameter, aR_PhoneParameter, aR_FaxParameter, aR_MobileNoParameter, aR_PreferredContactPersonParameter, oCP_EmployeeIDParameter, oCP_FirstNameParameter, oCP_MiddleNameParameter, oCP_LastNameParameter, oCP_EmailParameter, oCP_DesignationParameter, oCP_PhoneParameter, oCP_FaxParameter, oCP_MobileNoParameter, oCP_PreferredContactPersonParameter);
        }
    
        public virtual int Update_Sales_Requisition()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Sales_Requisition");
        }
    
        public virtual int Update_Sales_Requisition_Item()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Sales_Requisition_Item");
        }
    
        public virtual int Usp_GetAdressDetails(Nullable<long> country_id, Nullable<long> state_id, Nullable<long> ep_id, string enterpriseID, string enterpriseName, Nullable<bool> parentEnterprise, string permanentRegistration, string loginID, string password, Nullable<System.DateTime> dateOfInception, Nullable<System.DateTime> dateOfExpiry, string city, string address_1, string address_2, string postBox, string zipCode, string landLine, string fax, Nullable<long> emp_id, string emailAddress, string website, string aR_EmployeeID, string aR_FirstName, string aR_MiddleName, string aR_LastName, string aR_Email, string aR_Designation, string aR_Phone, string aR_Fax, string aR_MobileNo, string aR_PreferredContactPerson, string oCP_EmployeeID, string oCP_FirstName, string oCP_MiddleName, string oCP_LastName, string oCP_Email, string oCP_Designation, string oCP_Phone, string oCP_Fax, string oCP_MobileNo, string oCP_PreferredContactPerson, string create_UserID, string create_UserName, string update_UserID, string update_UserName, string tb_type, Nullable<System.DateTime> sys_Time, Nullable<System.DateTime> sys_Date, Nullable<int> del_status, string enterpriseBanner, string enterpriseLogo, string dBLocation, string applicationLocation, string country, string state, Nullable<long> city_id, string backupLocation, string mailIdLocation, Nullable<long> mRow, Nullable<long> cVal, string primaryFunctionalCurrency, string payPeriodType, string employerTaxNo, string employerPanNo, string employerDinNo, string employerBinNo, Nullable<System.DateTime> financialYearStartDate, string branchId, string employerId, string branchName, string branchCountry, string branchCurrency, Nullable<bool> cost_center, Nullable<bool> sales_outlet, Nullable<bool> warehouse, Nullable<bool> stock_point, string branch_taxid, string branchState, Nullable<long> b_id, Nullable<System.DateTime> financialYearEndDate, string manager_name, string org_ID, string organizationName, Nullable<bool> costCenter, string reportingDepartmentID, string mD_FirstName, string mD_MiddleName, string mD_LastName, string mD_Email, string mD_Designation, string mD_Phone, string mD_Fax, string mD_MobileNo, string mD_PreferredContactPerson, string org_Status, Nullable<long> o_id, Nullable<long> jobcat_id, string jobCategoryID, string jobCategoryDescription, Nullable<long> jobclass_id, string jobClassID, string jobClassDescription, string customer_ID, string customer_Name, Nullable<bool> both_Supplier_Customer, string cus_Status, string ledgerAccount, Nullable<long> cust_id, string post_Box, Nullable<long> supp_id, string supplier_ID, string supplier_Name, Nullable<bool> preferred_Supplier, string sup_Status, Nullable<long> jGroup_id, string jobGroupID, string jobGroupDescription, Nullable<long> jCatalouge_id, string jobCode, string jobTitle, Nullable<bool> supervisorFlag, string genderRestriction, Nullable<long> qual_id, Nullable<long> education_id, Nullable<long> speci_id, Nullable<long> univer_id, string special_course, Nullable<System.DateTime> passed_year, string institue, Nullable<int> pgNo, Nullable<int> pgSize, string ent_Status, string action)
        {
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(long));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(long));
    
            var ep_idParameter = ep_id.HasValue ?
                new ObjectParameter("ep_id", ep_id) :
                new ObjectParameter("ep_id", typeof(long));
    
            var enterpriseIDParameter = enterpriseID != null ?
                new ObjectParameter("EnterpriseID", enterpriseID) :
                new ObjectParameter("EnterpriseID", typeof(string));
    
            var enterpriseNameParameter = enterpriseName != null ?
                new ObjectParameter("EnterpriseName", enterpriseName) :
                new ObjectParameter("EnterpriseName", typeof(string));
    
            var parentEnterpriseParameter = parentEnterprise.HasValue ?
                new ObjectParameter("ParentEnterprise", parentEnterprise) :
                new ObjectParameter("ParentEnterprise", typeof(bool));
    
            var permanentRegistrationParameter = permanentRegistration != null ?
                new ObjectParameter("PermanentRegistration", permanentRegistration) :
                new ObjectParameter("PermanentRegistration", typeof(string));
    
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dateOfInceptionParameter = dateOfInception.HasValue ?
                new ObjectParameter("DateOfInception", dateOfInception) :
                new ObjectParameter("DateOfInception", typeof(System.DateTime));
    
            var dateOfExpiryParameter = dateOfExpiry.HasValue ?
                new ObjectParameter("DateOfExpiry", dateOfExpiry) :
                new ObjectParameter("DateOfExpiry", typeof(System.DateTime));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var address_1Parameter = address_1 != null ?
                new ObjectParameter("Address_1", address_1) :
                new ObjectParameter("Address_1", typeof(string));
    
            var address_2Parameter = address_2 != null ?
                new ObjectParameter("Address_2", address_2) :
                new ObjectParameter("Address_2", typeof(string));
    
            var postBoxParameter = postBox != null ?
                new ObjectParameter("PostBox", postBox) :
                new ObjectParameter("PostBox", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var landLineParameter = landLine != null ?
                new ObjectParameter("LandLine", landLine) :
                new ObjectParameter("LandLine", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var aR_EmployeeIDParameter = aR_EmployeeID != null ?
                new ObjectParameter("AR_EmployeeID", aR_EmployeeID) :
                new ObjectParameter("AR_EmployeeID", typeof(string));
    
            var aR_FirstNameParameter = aR_FirstName != null ?
                new ObjectParameter("AR_FirstName", aR_FirstName) :
                new ObjectParameter("AR_FirstName", typeof(string));
    
            var aR_MiddleNameParameter = aR_MiddleName != null ?
                new ObjectParameter("AR_MiddleName", aR_MiddleName) :
                new ObjectParameter("AR_MiddleName", typeof(string));
    
            var aR_LastNameParameter = aR_LastName != null ?
                new ObjectParameter("AR_LastName", aR_LastName) :
                new ObjectParameter("AR_LastName", typeof(string));
    
            var aR_EmailParameter = aR_Email != null ?
                new ObjectParameter("AR_Email", aR_Email) :
                new ObjectParameter("AR_Email", typeof(string));
    
            var aR_DesignationParameter = aR_Designation != null ?
                new ObjectParameter("AR_Designation", aR_Designation) :
                new ObjectParameter("AR_Designation", typeof(string));
    
            var aR_PhoneParameter = aR_Phone != null ?
                new ObjectParameter("AR_Phone", aR_Phone) :
                new ObjectParameter("AR_Phone", typeof(string));
    
            var aR_FaxParameter = aR_Fax != null ?
                new ObjectParameter("AR_Fax", aR_Fax) :
                new ObjectParameter("AR_Fax", typeof(string));
    
            var aR_MobileNoParameter = aR_MobileNo != null ?
                new ObjectParameter("AR_MobileNo", aR_MobileNo) :
                new ObjectParameter("AR_MobileNo", typeof(string));
    
            var aR_PreferredContactPersonParameter = aR_PreferredContactPerson != null ?
                new ObjectParameter("AR_PreferredContactPerson", aR_PreferredContactPerson) :
                new ObjectParameter("AR_PreferredContactPerson", typeof(string));
    
            var oCP_EmployeeIDParameter = oCP_EmployeeID != null ?
                new ObjectParameter("OCP_EmployeeID", oCP_EmployeeID) :
                new ObjectParameter("OCP_EmployeeID", typeof(string));
    
            var oCP_FirstNameParameter = oCP_FirstName != null ?
                new ObjectParameter("OCP_FirstName", oCP_FirstName) :
                new ObjectParameter("OCP_FirstName", typeof(string));
    
            var oCP_MiddleNameParameter = oCP_MiddleName != null ?
                new ObjectParameter("OCP_MiddleName", oCP_MiddleName) :
                new ObjectParameter("OCP_MiddleName", typeof(string));
    
            var oCP_LastNameParameter = oCP_LastName != null ?
                new ObjectParameter("OCP_LastName", oCP_LastName) :
                new ObjectParameter("OCP_LastName", typeof(string));
    
            var oCP_EmailParameter = oCP_Email != null ?
                new ObjectParameter("OCP_Email", oCP_Email) :
                new ObjectParameter("OCP_Email", typeof(string));
    
            var oCP_DesignationParameter = oCP_Designation != null ?
                new ObjectParameter("OCP_Designation", oCP_Designation) :
                new ObjectParameter("OCP_Designation", typeof(string));
    
            var oCP_PhoneParameter = oCP_Phone != null ?
                new ObjectParameter("OCP_Phone", oCP_Phone) :
                new ObjectParameter("OCP_Phone", typeof(string));
    
            var oCP_FaxParameter = oCP_Fax != null ?
                new ObjectParameter("OCP_Fax", oCP_Fax) :
                new ObjectParameter("OCP_Fax", typeof(string));
    
            var oCP_MobileNoParameter = oCP_MobileNo != null ?
                new ObjectParameter("OCP_MobileNo", oCP_MobileNo) :
                new ObjectParameter("OCP_MobileNo", typeof(string));
    
            var oCP_PreferredContactPersonParameter = oCP_PreferredContactPerson != null ?
                new ObjectParameter("OCP_PreferredContactPerson", oCP_PreferredContactPerson) :
                new ObjectParameter("OCP_PreferredContactPerson", typeof(string));
    
            var create_UserIDParameter = create_UserID != null ?
                new ObjectParameter("Create_UserID", create_UserID) :
                new ObjectParameter("Create_UserID", typeof(string));
    
            var create_UserNameParameter = create_UserName != null ?
                new ObjectParameter("Create_UserName", create_UserName) :
                new ObjectParameter("Create_UserName", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var tb_typeParameter = tb_type != null ?
                new ObjectParameter("tb_type", tb_type) :
                new ObjectParameter("tb_type", typeof(string));
    
            var sys_TimeParameter = sys_Time.HasValue ?
                new ObjectParameter("Sys_Time", sys_Time) :
                new ObjectParameter("Sys_Time", typeof(System.DateTime));
    
            var sys_DateParameter = sys_Date.HasValue ?
                new ObjectParameter("Sys_Date", sys_Date) :
                new ObjectParameter("Sys_Date", typeof(System.DateTime));
    
            var del_statusParameter = del_status.HasValue ?
                new ObjectParameter("del_status", del_status) :
                new ObjectParameter("del_status", typeof(int));
    
            var enterpriseBannerParameter = enterpriseBanner != null ?
                new ObjectParameter("EnterpriseBanner", enterpriseBanner) :
                new ObjectParameter("EnterpriseBanner", typeof(string));
    
            var enterpriseLogoParameter = enterpriseLogo != null ?
                new ObjectParameter("EnterpriseLogo", enterpriseLogo) :
                new ObjectParameter("EnterpriseLogo", typeof(string));
    
            var dBLocationParameter = dBLocation != null ?
                new ObjectParameter("DBLocation", dBLocation) :
                new ObjectParameter("DBLocation", typeof(string));
    
            var applicationLocationParameter = applicationLocation != null ?
                new ObjectParameter("ApplicationLocation", applicationLocation) :
                new ObjectParameter("ApplicationLocation", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var city_idParameter = city_id.HasValue ?
                new ObjectParameter("city_id", city_id) :
                new ObjectParameter("city_id", typeof(long));
    
            var backupLocationParameter = backupLocation != null ?
                new ObjectParameter("BackupLocation", backupLocation) :
                new ObjectParameter("BackupLocation", typeof(string));
    
            var mailIdLocationParameter = mailIdLocation != null ?
                new ObjectParameter("MailIdLocation", mailIdLocation) :
                new ObjectParameter("MailIdLocation", typeof(string));
    
            var mRowParameter = mRow.HasValue ?
                new ObjectParameter("mRow", mRow) :
                new ObjectParameter("mRow", typeof(long));
    
            var cValParameter = cVal.HasValue ?
                new ObjectParameter("cVal", cVal) :
                new ObjectParameter("cVal", typeof(long));
    
            var primaryFunctionalCurrencyParameter = primaryFunctionalCurrency != null ?
                new ObjectParameter("PrimaryFunctionalCurrency", primaryFunctionalCurrency) :
                new ObjectParameter("PrimaryFunctionalCurrency", typeof(string));
    
            var payPeriodTypeParameter = payPeriodType != null ?
                new ObjectParameter("PayPeriodType", payPeriodType) :
                new ObjectParameter("PayPeriodType", typeof(string));
    
            var employerTaxNoParameter = employerTaxNo != null ?
                new ObjectParameter("EmployerTaxNo", employerTaxNo) :
                new ObjectParameter("EmployerTaxNo", typeof(string));
    
            var employerPanNoParameter = employerPanNo != null ?
                new ObjectParameter("EmployerPanNo", employerPanNo) :
                new ObjectParameter("EmployerPanNo", typeof(string));
    
            var employerDinNoParameter = employerDinNo != null ?
                new ObjectParameter("EmployerDinNo", employerDinNo) :
                new ObjectParameter("EmployerDinNo", typeof(string));
    
            var employerBinNoParameter = employerBinNo != null ?
                new ObjectParameter("EmployerBinNo", employerBinNo) :
                new ObjectParameter("EmployerBinNo", typeof(string));
    
            var financialYearStartDateParameter = financialYearStartDate.HasValue ?
                new ObjectParameter("FinancialYearStartDate", financialYearStartDate) :
                new ObjectParameter("FinancialYearStartDate", typeof(System.DateTime));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var employerIdParameter = employerId != null ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var branchCountryParameter = branchCountry != null ?
                new ObjectParameter("BranchCountry", branchCountry) :
                new ObjectParameter("BranchCountry", typeof(string));
    
            var branchCurrencyParameter = branchCurrency != null ?
                new ObjectParameter("BranchCurrency", branchCurrency) :
                new ObjectParameter("BranchCurrency", typeof(string));
    
            var cost_centerParameter = cost_center.HasValue ?
                new ObjectParameter("cost_center", cost_center) :
                new ObjectParameter("cost_center", typeof(bool));
    
            var sales_outletParameter = sales_outlet.HasValue ?
                new ObjectParameter("sales_outlet", sales_outlet) :
                new ObjectParameter("sales_outlet", typeof(bool));
    
            var warehouseParameter = warehouse.HasValue ?
                new ObjectParameter("warehouse", warehouse) :
                new ObjectParameter("warehouse", typeof(bool));
    
            var stock_pointParameter = stock_point.HasValue ?
                new ObjectParameter("stock_point", stock_point) :
                new ObjectParameter("stock_point", typeof(bool));
    
            var branch_taxidParameter = branch_taxid != null ?
                new ObjectParameter("branch_taxid", branch_taxid) :
                new ObjectParameter("branch_taxid", typeof(string));
    
            var branchStateParameter = branchState != null ?
                new ObjectParameter("BranchState", branchState) :
                new ObjectParameter("BranchState", typeof(string));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var financialYearEndDateParameter = financialYearEndDate.HasValue ?
                new ObjectParameter("FinancialYearEndDate", financialYearEndDate) :
                new ObjectParameter("FinancialYearEndDate", typeof(System.DateTime));
    
            var manager_nameParameter = manager_name != null ?
                new ObjectParameter("manager_name", manager_name) :
                new ObjectParameter("manager_name", typeof(string));
    
            var org_IDParameter = org_ID != null ?
                new ObjectParameter("Org_ID", org_ID) :
                new ObjectParameter("Org_ID", typeof(string));
    
            var organizationNameParameter = organizationName != null ?
                new ObjectParameter("OrganizationName", organizationName) :
                new ObjectParameter("OrganizationName", typeof(string));
    
            var costCenterParameter = costCenter.HasValue ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(bool));
    
            var reportingDepartmentIDParameter = reportingDepartmentID != null ?
                new ObjectParameter("ReportingDepartmentID", reportingDepartmentID) :
                new ObjectParameter("ReportingDepartmentID", typeof(string));
    
            var mD_FirstNameParameter = mD_FirstName != null ?
                new ObjectParameter("MD_FirstName", mD_FirstName) :
                new ObjectParameter("MD_FirstName", typeof(string));
    
            var mD_MiddleNameParameter = mD_MiddleName != null ?
                new ObjectParameter("MD_MiddleName", mD_MiddleName) :
                new ObjectParameter("MD_MiddleName", typeof(string));
    
            var mD_LastNameParameter = mD_LastName != null ?
                new ObjectParameter("MD_LastName", mD_LastName) :
                new ObjectParameter("MD_LastName", typeof(string));
    
            var mD_EmailParameter = mD_Email != null ?
                new ObjectParameter("MD_Email", mD_Email) :
                new ObjectParameter("MD_Email", typeof(string));
    
            var mD_DesignationParameter = mD_Designation != null ?
                new ObjectParameter("MD_Designation", mD_Designation) :
                new ObjectParameter("MD_Designation", typeof(string));
    
            var mD_PhoneParameter = mD_Phone != null ?
                new ObjectParameter("MD_Phone", mD_Phone) :
                new ObjectParameter("MD_Phone", typeof(string));
    
            var mD_FaxParameter = mD_Fax != null ?
                new ObjectParameter("MD_Fax", mD_Fax) :
                new ObjectParameter("MD_Fax", typeof(string));
    
            var mD_MobileNoParameter = mD_MobileNo != null ?
                new ObjectParameter("MD_MobileNo", mD_MobileNo) :
                new ObjectParameter("MD_MobileNo", typeof(string));
    
            var mD_PreferredContactPersonParameter = mD_PreferredContactPerson != null ?
                new ObjectParameter("MD_PreferredContactPerson", mD_PreferredContactPerson) :
                new ObjectParameter("MD_PreferredContactPerson", typeof(string));
    
            var org_StatusParameter = org_Status != null ?
                new ObjectParameter("Org_Status", org_Status) :
                new ObjectParameter("Org_Status", typeof(string));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var jobcat_idParameter = jobcat_id.HasValue ?
                new ObjectParameter("Jobcat_id", jobcat_id) :
                new ObjectParameter("Jobcat_id", typeof(long));
    
            var jobCategoryIDParameter = jobCategoryID != null ?
                new ObjectParameter("JobCategoryID", jobCategoryID) :
                new ObjectParameter("JobCategoryID", typeof(string));
    
            var jobCategoryDescriptionParameter = jobCategoryDescription != null ?
                new ObjectParameter("JobCategoryDescription", jobCategoryDescription) :
                new ObjectParameter("JobCategoryDescription", typeof(string));
    
            var jobclass_idParameter = jobclass_id.HasValue ?
                new ObjectParameter("jobclass_id", jobclass_id) :
                new ObjectParameter("jobclass_id", typeof(long));
    
            var jobClassIDParameter = jobClassID != null ?
                new ObjectParameter("JobClassID", jobClassID) :
                new ObjectParameter("JobClassID", typeof(string));
    
            var jobClassDescriptionParameter = jobClassDescription != null ?
                new ObjectParameter("JobClassDescription", jobClassDescription) :
                new ObjectParameter("JobClassDescription", typeof(string));
    
            var customer_IDParameter = customer_ID != null ?
                new ObjectParameter("Customer_ID", customer_ID) :
                new ObjectParameter("Customer_ID", typeof(string));
    
            var customer_NameParameter = customer_Name != null ?
                new ObjectParameter("Customer_Name", customer_Name) :
                new ObjectParameter("Customer_Name", typeof(string));
    
            var both_Supplier_CustomerParameter = both_Supplier_Customer.HasValue ?
                new ObjectParameter("Both_Supplier_Customer", both_Supplier_Customer) :
                new ObjectParameter("Both_Supplier_Customer", typeof(bool));
    
            var cus_StatusParameter = cus_Status != null ?
                new ObjectParameter("Cus_Status", cus_Status) :
                new ObjectParameter("Cus_Status", typeof(string));
    
            var ledgerAccountParameter = ledgerAccount != null ?
                new ObjectParameter("LedgerAccount", ledgerAccount) :
                new ObjectParameter("LedgerAccount", typeof(string));
    
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(long));
    
            var post_BoxParameter = post_Box != null ?
                new ObjectParameter("Post_Box", post_Box) :
                new ObjectParameter("Post_Box", typeof(string));
    
            var supp_idParameter = supp_id.HasValue ?
                new ObjectParameter("supp_id", supp_id) :
                new ObjectParameter("supp_id", typeof(long));
    
            var supplier_IDParameter = supplier_ID != null ?
                new ObjectParameter("Supplier_ID", supplier_ID) :
                new ObjectParameter("Supplier_ID", typeof(string));
    
            var supplier_NameParameter = supplier_Name != null ?
                new ObjectParameter("Supplier_Name", supplier_Name) :
                new ObjectParameter("Supplier_Name", typeof(string));
    
            var preferred_SupplierParameter = preferred_Supplier.HasValue ?
                new ObjectParameter("Preferred_Supplier", preferred_Supplier) :
                new ObjectParameter("Preferred_Supplier", typeof(bool));
    
            var sup_StatusParameter = sup_Status != null ?
                new ObjectParameter("Sup_Status", sup_Status) :
                new ObjectParameter("Sup_Status", typeof(string));
    
            var jGroup_idParameter = jGroup_id.HasValue ?
                new ObjectParameter("JGroup_id", jGroup_id) :
                new ObjectParameter("JGroup_id", typeof(long));
    
            var jobGroupIDParameter = jobGroupID != null ?
                new ObjectParameter("JobGroupID", jobGroupID) :
                new ObjectParameter("JobGroupID", typeof(string));
    
            var jobGroupDescriptionParameter = jobGroupDescription != null ?
                new ObjectParameter("JobGroupDescription", jobGroupDescription) :
                new ObjectParameter("JobGroupDescription", typeof(string));
    
            var jCatalouge_idParameter = jCatalouge_id.HasValue ?
                new ObjectParameter("JCatalouge_id", jCatalouge_id) :
                new ObjectParameter("JCatalouge_id", typeof(long));
    
            var jobCodeParameter = jobCode != null ?
                new ObjectParameter("JobCode", jobCode) :
                new ObjectParameter("JobCode", typeof(string));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var supervisorFlagParameter = supervisorFlag.HasValue ?
                new ObjectParameter("SupervisorFlag", supervisorFlag) :
                new ObjectParameter("SupervisorFlag", typeof(bool));
    
            var genderRestrictionParameter = genderRestriction != null ?
                new ObjectParameter("GenderRestriction", genderRestriction) :
                new ObjectParameter("GenderRestriction", typeof(string));
    
            var qual_idParameter = qual_id.HasValue ?
                new ObjectParameter("qual_id", qual_id) :
                new ObjectParameter("qual_id", typeof(long));
    
            var education_idParameter = education_id.HasValue ?
                new ObjectParameter("Education_id", education_id) :
                new ObjectParameter("Education_id", typeof(long));
    
            var speci_idParameter = speci_id.HasValue ?
                new ObjectParameter("speci_id", speci_id) :
                new ObjectParameter("speci_id", typeof(long));
    
            var univer_idParameter = univer_id.HasValue ?
                new ObjectParameter("univer_id", univer_id) :
                new ObjectParameter("univer_id", typeof(long));
    
            var special_courseParameter = special_course != null ?
                new ObjectParameter("special_course", special_course) :
                new ObjectParameter("special_course", typeof(string));
    
            var passed_yearParameter = passed_year.HasValue ?
                new ObjectParameter("passed_year", passed_year) :
                new ObjectParameter("passed_year", typeof(System.DateTime));
    
            var institueParameter = institue != null ?
                new ObjectParameter("institue", institue) :
                new ObjectParameter("institue", typeof(string));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var ent_StatusParameter = ent_Status != null ?
                new ObjectParameter("Ent_Status", ent_Status) :
                new ObjectParameter("Ent_Status", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_GetAdressDetails", country_idParameter, state_idParameter, ep_idParameter, enterpriseIDParameter, enterpriseNameParameter, parentEnterpriseParameter, permanentRegistrationParameter, loginIDParameter, passwordParameter, dateOfInceptionParameter, dateOfExpiryParameter, cityParameter, address_1Parameter, address_2Parameter, postBoxParameter, zipCodeParameter, landLineParameter, faxParameter, emp_idParameter, emailAddressParameter, websiteParameter, aR_EmployeeIDParameter, aR_FirstNameParameter, aR_MiddleNameParameter, aR_LastNameParameter, aR_EmailParameter, aR_DesignationParameter, aR_PhoneParameter, aR_FaxParameter, aR_MobileNoParameter, aR_PreferredContactPersonParameter, oCP_EmployeeIDParameter, oCP_FirstNameParameter, oCP_MiddleNameParameter, oCP_LastNameParameter, oCP_EmailParameter, oCP_DesignationParameter, oCP_PhoneParameter, oCP_FaxParameter, oCP_MobileNoParameter, oCP_PreferredContactPersonParameter, create_UserIDParameter, create_UserNameParameter, update_UserIDParameter, update_UserNameParameter, tb_typeParameter, sys_TimeParameter, sys_DateParameter, del_statusParameter, enterpriseBannerParameter, enterpriseLogoParameter, dBLocationParameter, applicationLocationParameter, countryParameter, stateParameter, city_idParameter, backupLocationParameter, mailIdLocationParameter, mRowParameter, cValParameter, primaryFunctionalCurrencyParameter, payPeriodTypeParameter, employerTaxNoParameter, employerPanNoParameter, employerDinNoParameter, employerBinNoParameter, financialYearStartDateParameter, branchIdParameter, employerIdParameter, branchNameParameter, branchCountryParameter, branchCurrencyParameter, cost_centerParameter, sales_outletParameter, warehouseParameter, stock_pointParameter, branch_taxidParameter, branchStateParameter, b_idParameter, financialYearEndDateParameter, manager_nameParameter, org_IDParameter, organizationNameParameter, costCenterParameter, reportingDepartmentIDParameter, mD_FirstNameParameter, mD_MiddleNameParameter, mD_LastNameParameter, mD_EmailParameter, mD_DesignationParameter, mD_PhoneParameter, mD_FaxParameter, mD_MobileNoParameter, mD_PreferredContactPersonParameter, org_StatusParameter, o_idParameter, jobcat_idParameter, jobCategoryIDParameter, jobCategoryDescriptionParameter, jobclass_idParameter, jobClassIDParameter, jobClassDescriptionParameter, customer_IDParameter, customer_NameParameter, both_Supplier_CustomerParameter, cus_StatusParameter, ledgerAccountParameter, cust_idParameter, post_BoxParameter, supp_idParameter, supplier_IDParameter, supplier_NameParameter, preferred_SupplierParameter, sup_StatusParameter, jGroup_idParameter, jobGroupIDParameter, jobGroupDescriptionParameter, jCatalouge_idParameter, jobCodeParameter, jobTitleParameter, supervisorFlagParameter, genderRestrictionParameter, qual_idParameter, education_idParameter, speci_idParameter, univer_idParameter, special_courseParameter, passed_yearParameter, institueParameter, pgNoParameter, pgSizeParameter, ent_StatusParameter, actionParameter);
        }
    
        public virtual int usp_GetErrorInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetErrorInfo");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ProcessAssets(Nullable<long> asset_id, string assetID, Nullable<long> emp_id, Nullable<long> o_id, Nullable<long> b_id, string assetType, string assetDescription, Nullable<System.DateTime> acquireDate, Nullable<System.DateTime> warrentyExpiryDate, string vD_FirstName, string vD_MiddleName, string vD_LastName, string vD_Designation, string vD_Email, string vD_Phone, string vD_Fax, string vD_MobileNo, string update_UserID, string update_UserName, string methodOfDepreciation, Nullable<long> noOfYearsDepreciationCompleted, Nullable<double> costOfAsset, Nullable<double> slavageValue, Nullable<long> noOfYearsOfLife, string purchaseType, Nullable<long> relatedFixedAssetsAccountId, Nullable<long> relatedAccumulatedDepreciation, Nullable<long> relatedDepreciationExpense, Nullable<bool> isPosted, Nullable<bool> isApproved, Nullable<long> supp_id, Nullable<bool> isRejected, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(long));
    
            var assetIDParameter = assetID != null ?
                new ObjectParameter("AssetID", assetID) :
                new ObjectParameter("AssetID", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var assetTypeParameter = assetType != null ?
                new ObjectParameter("AssetType", assetType) :
                new ObjectParameter("AssetType", typeof(string));
    
            var assetDescriptionParameter = assetDescription != null ?
                new ObjectParameter("AssetDescription", assetDescription) :
                new ObjectParameter("AssetDescription", typeof(string));
    
            var acquireDateParameter = acquireDate.HasValue ?
                new ObjectParameter("AcquireDate", acquireDate) :
                new ObjectParameter("AcquireDate", typeof(System.DateTime));
    
            var warrentyExpiryDateParameter = warrentyExpiryDate.HasValue ?
                new ObjectParameter("WarrentyExpiryDate", warrentyExpiryDate) :
                new ObjectParameter("WarrentyExpiryDate", typeof(System.DateTime));
    
            var vD_FirstNameParameter = vD_FirstName != null ?
                new ObjectParameter("VD_FirstName", vD_FirstName) :
                new ObjectParameter("VD_FirstName", typeof(string));
    
            var vD_MiddleNameParameter = vD_MiddleName != null ?
                new ObjectParameter("VD_MiddleName", vD_MiddleName) :
                new ObjectParameter("VD_MiddleName", typeof(string));
    
            var vD_LastNameParameter = vD_LastName != null ?
                new ObjectParameter("VD_LastName", vD_LastName) :
                new ObjectParameter("VD_LastName", typeof(string));
    
            var vD_DesignationParameter = vD_Designation != null ?
                new ObjectParameter("VD_Designation", vD_Designation) :
                new ObjectParameter("VD_Designation", typeof(string));
    
            var vD_EmailParameter = vD_Email != null ?
                new ObjectParameter("VD_Email", vD_Email) :
                new ObjectParameter("VD_Email", typeof(string));
    
            var vD_PhoneParameter = vD_Phone != null ?
                new ObjectParameter("VD_Phone", vD_Phone) :
                new ObjectParameter("VD_Phone", typeof(string));
    
            var vD_FaxParameter = vD_Fax != null ?
                new ObjectParameter("VD_Fax", vD_Fax) :
                new ObjectParameter("VD_Fax", typeof(string));
    
            var vD_MobileNoParameter = vD_MobileNo != null ?
                new ObjectParameter("VD_MobileNo", vD_MobileNo) :
                new ObjectParameter("VD_MobileNo", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var methodOfDepreciationParameter = methodOfDepreciation != null ?
                new ObjectParameter("MethodOfDepreciation", methodOfDepreciation) :
                new ObjectParameter("MethodOfDepreciation", typeof(string));
    
            var noOfYearsDepreciationCompletedParameter = noOfYearsDepreciationCompleted.HasValue ?
                new ObjectParameter("NoOfYearsDepreciationCompleted", noOfYearsDepreciationCompleted) :
                new ObjectParameter("NoOfYearsDepreciationCompleted", typeof(long));
    
            var costOfAssetParameter = costOfAsset.HasValue ?
                new ObjectParameter("CostOfAsset", costOfAsset) :
                new ObjectParameter("CostOfAsset", typeof(double));
    
            var slavageValueParameter = slavageValue.HasValue ?
                new ObjectParameter("SlavageValue", slavageValue) :
                new ObjectParameter("SlavageValue", typeof(double));
    
            var noOfYearsOfLifeParameter = noOfYearsOfLife.HasValue ?
                new ObjectParameter("NoOfYearsOfLife", noOfYearsOfLife) :
                new ObjectParameter("NoOfYearsOfLife", typeof(long));
    
            var purchaseTypeParameter = purchaseType != null ?
                new ObjectParameter("PurchaseType", purchaseType) :
                new ObjectParameter("PurchaseType", typeof(string));
    
            var relatedFixedAssetsAccountIdParameter = relatedFixedAssetsAccountId.HasValue ?
                new ObjectParameter("RelatedFixedAssetsAccountId", relatedFixedAssetsAccountId) :
                new ObjectParameter("RelatedFixedAssetsAccountId", typeof(long));
    
            var relatedAccumulatedDepreciationParameter = relatedAccumulatedDepreciation.HasValue ?
                new ObjectParameter("RelatedAccumulatedDepreciation", relatedAccumulatedDepreciation) :
                new ObjectParameter("RelatedAccumulatedDepreciation", typeof(long));
    
            var relatedDepreciationExpenseParameter = relatedDepreciationExpense.HasValue ?
                new ObjectParameter("RelatedDepreciationExpense", relatedDepreciationExpense) :
                new ObjectParameter("RelatedDepreciationExpense", typeof(long));
    
            var isPostedParameter = isPosted.HasValue ?
                new ObjectParameter("IsPosted", isPosted) :
                new ObjectParameter("IsPosted", typeof(bool));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var supp_idParameter = supp_id.HasValue ?
                new ObjectParameter("supp_id", supp_id) :
                new ObjectParameter("supp_id", typeof(long));
    
            var isRejectedParameter = isRejected.HasValue ?
                new ObjectParameter("IsRejected", isRejected) :
                new ObjectParameter("IsRejected", typeof(bool));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ProcessAssets", asset_idParameter, assetIDParameter, emp_idParameter, o_idParameter, b_idParameter, assetTypeParameter, assetDescriptionParameter, acquireDateParameter, warrentyExpiryDateParameter, vD_FirstNameParameter, vD_MiddleNameParameter, vD_LastNameParameter, vD_DesignationParameter, vD_EmailParameter, vD_PhoneParameter, vD_FaxParameter, vD_MobileNoParameter, update_UserIDParameter, update_UserNameParameter, methodOfDepreciationParameter, noOfYearsDepreciationCompletedParameter, costOfAssetParameter, slavageValueParameter, noOfYearsOfLifeParameter, purchaseTypeParameter, relatedFixedAssetsAccountIdParameter, relatedAccumulatedDepreciationParameter, relatedDepreciationExpenseParameter, isPostedParameter, isApprovedParameter, supp_idParameter, isRejectedParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ProcessBankMaster(Nullable<long> bank_id, string bank_Code, string bank_Name, string aba_RoutingNo, string ibswiftrouting, string acronymname, string iB_BankCode, string agentWps_Id, string ifsc_Code, string branch_name, Nullable<long> city_id, Nullable<long> state_id, Nullable<long> country_id, string address, string fax, string phone_no, string website, string manager_name, string managermobile_no, string managerphone_no, string manager_Fax, string manager_Email, string update_UserID, string update_UserName, Nullable<long> parentbank_id, string parentbank_code, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var bank_idParameter = bank_id.HasValue ?
                new ObjectParameter("Bank_id", bank_id) :
                new ObjectParameter("Bank_id", typeof(long));
    
            var bank_CodeParameter = bank_Code != null ?
                new ObjectParameter("Bank_Code", bank_Code) :
                new ObjectParameter("Bank_Code", typeof(string));
    
            var bank_NameParameter = bank_Name != null ?
                new ObjectParameter("Bank_Name", bank_Name) :
                new ObjectParameter("Bank_Name", typeof(string));
    
            var aba_RoutingNoParameter = aba_RoutingNo != null ?
                new ObjectParameter("Aba_RoutingNo", aba_RoutingNo) :
                new ObjectParameter("Aba_RoutingNo", typeof(string));
    
            var ibswiftroutingParameter = ibswiftrouting != null ?
                new ObjectParameter("ibswiftrouting", ibswiftrouting) :
                new ObjectParameter("ibswiftrouting", typeof(string));
    
            var acronymnameParameter = acronymname != null ?
                new ObjectParameter("Acronymname", acronymname) :
                new ObjectParameter("Acronymname", typeof(string));
    
            var iB_BankCodeParameter = iB_BankCode != null ?
                new ObjectParameter("IB_BankCode", iB_BankCode) :
                new ObjectParameter("IB_BankCode", typeof(string));
    
            var agentWps_IdParameter = agentWps_Id != null ?
                new ObjectParameter("AgentWps_Id", agentWps_Id) :
                new ObjectParameter("AgentWps_Id", typeof(string));
    
            var ifsc_CodeParameter = ifsc_Code != null ?
                new ObjectParameter("Ifsc_Code", ifsc_Code) :
                new ObjectParameter("Ifsc_Code", typeof(string));
    
            var branch_nameParameter = branch_name != null ?
                new ObjectParameter("Branch_name", branch_name) :
                new ObjectParameter("Branch_name", typeof(string));
    
            var city_idParameter = city_id.HasValue ?
                new ObjectParameter("city_id", city_id) :
                new ObjectParameter("city_id", typeof(long));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(long));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var manager_nameParameter = manager_name != null ?
                new ObjectParameter("manager_name", manager_name) :
                new ObjectParameter("manager_name", typeof(string));
    
            var managermobile_noParameter = managermobile_no != null ?
                new ObjectParameter("managermobile_no", managermobile_no) :
                new ObjectParameter("managermobile_no", typeof(string));
    
            var managerphone_noParameter = managerphone_no != null ?
                new ObjectParameter("managerphone_no", managerphone_no) :
                new ObjectParameter("managerphone_no", typeof(string));
    
            var manager_FaxParameter = manager_Fax != null ?
                new ObjectParameter("manager_Fax", manager_Fax) :
                new ObjectParameter("manager_Fax", typeof(string));
    
            var manager_EmailParameter = manager_Email != null ?
                new ObjectParameter("manager_Email", manager_Email) :
                new ObjectParameter("manager_Email", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var parentbank_idParameter = parentbank_id.HasValue ?
                new ObjectParameter("parentbank_id", parentbank_id) :
                new ObjectParameter("parentbank_id", typeof(long));
    
            var parentbank_codeParameter = parentbank_code != null ?
                new ObjectParameter("parentbank_code", parentbank_code) :
                new ObjectParameter("parentbank_code", typeof(string));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ProcessBankMaster", bank_idParameter, bank_CodeParameter, bank_NameParameter, aba_RoutingNoParameter, ibswiftroutingParameter, acronymnameParameter, iB_BankCodeParameter, agentWps_IdParameter, ifsc_CodeParameter, branch_nameParameter, city_idParameter, state_idParameter, country_idParameter, addressParameter, faxParameter, phone_noParameter, websiteParameter, manager_nameParameter, managermobile_noParameter, managerphone_noParameter, manager_FaxParameter, manager_EmailParameter, update_UserIDParameter, update_UserNameParameter, parentbank_idParameter, parentbank_codeParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ProcessEmployers(Nullable<long> country_id, Nullable<long> state_id, Nullable<long> emp_id, string employerID, string employerName, string parentCompany, string permanentRegistration, string loginID, string password, Nullable<System.DateTime> dateOfInception, Nullable<System.DateTime> dateOfExpiry, string city, string address_1, string address_2, string postBox, string zipCode, string landLine, string fax, string emailAddress, string website, string aR_EmployeeID, string aR_FirstName, Nullable<long> skill_id, string aR_MiddleName, string aR_LastName, string aR_Email, string aR_Designation, string aR_Phone, string aR_Fax, string aR_MobileNo, string aR_PreferredContactPerson, string oCP_EmployeeID, string oCP_FirstName, string oCP_MiddleName, string oCP_LastName, string oCP_Email, string oCP_Designation, string oCP_Phone, string oCP_Fax, string oCP_MobileNo, string oCP_PreferredContactPerson, string create_UserID, string create_UserName, string update_UserID, string update_UserName, Nullable<System.DateTime> sys_Time, Nullable<System.DateTime> sys_Date, string enterpriseBanner, string empr_Status, Nullable<long> city_id, Nullable<long> course_id, Nullable<long> speci_id, string employer_Banner, string enterpriseID, string parentName, string employer_Logo, string enterpriseLogo, string tb_type, string dBLocation, string applicationLocation, string country, Nullable<int> del_status, string state, string backupLocation, string mailIdLocation, string primaryFunctionalCurrency, string payPeriodType, string employerTaxNo, string employerPanNo, string employerDinNo, string employerBinNo, Nullable<System.DateTime> financialYearStartDate, Nullable<System.DateTime> financialYearEndDate, string ent_Status, Nullable<long> employee_id, string employeeID, string eD_FirstName, string eD_MiddleName, string eD_LastName, string eD_Designation, string eD_Email, string drivingLicenseNumber, Nullable<System.DateTime> drivingLicenseIssueDate, Nullable<System.DateTime> drivingLicenseExpiryDate, string mobileNo, string phoneNo, string ext, string bloodGroup, Nullable<System.DateTime> contractStartDate, Nullable<System.DateTime> contractEndDate, Nullable<System.DateTime> workStartDate, Nullable<System.DateTime> dateOfBirth, Nullable<System.DateTime> retirementDate, string noOfDependents, Nullable<int> eD_PreferredContactMode, string passportNo, Nullable<System.DateTime> issueDate, Nullable<System.DateTime> expiryDate, string issuingAuthority, string issuingCountry, string visaNo, Nullable<System.DateTime> visa_IssueDate, Nullable<System.DateTime> visa_ExpiryDate, string visa_IssuingAuthority, string visa_IssuingCountry, string workPermitNo, Nullable<System.DateTime> work_IssueDate, Nullable<System.DateTime> work_ExpiryDate, string work_IssuingAuthority, string work_IssuingCountry, string eCP_FirstName, string eCP_MiddleName, string eCP_LastName, string eCP_Email, string eCP_Relation, string eCP_Phone, string eCP_Fax, string eCP_MobileNo, string eCP_CountryOfResidency, string eCP_EmergencyContactPerson, Nullable<int> eCP_PreferredContactMode, string employee_Status, Nullable<long> b_id, Nullable<long> o_id, Nullable<long> project_id, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(long));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(long));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var employerIDParameter = employerID != null ?
                new ObjectParameter("EmployerID", employerID) :
                new ObjectParameter("EmployerID", typeof(string));
    
            var employerNameParameter = employerName != null ?
                new ObjectParameter("EmployerName", employerName) :
                new ObjectParameter("EmployerName", typeof(string));
    
            var parentCompanyParameter = parentCompany != null ?
                new ObjectParameter("ParentCompany", parentCompany) :
                new ObjectParameter("ParentCompany", typeof(string));
    
            var permanentRegistrationParameter = permanentRegistration != null ?
                new ObjectParameter("PermanentRegistration", permanentRegistration) :
                new ObjectParameter("PermanentRegistration", typeof(string));
    
            var loginIDParameter = loginID != null ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dateOfInceptionParameter = dateOfInception.HasValue ?
                new ObjectParameter("DateOfInception", dateOfInception) :
                new ObjectParameter("DateOfInception", typeof(System.DateTime));
    
            var dateOfExpiryParameter = dateOfExpiry.HasValue ?
                new ObjectParameter("DateOfExpiry", dateOfExpiry) :
                new ObjectParameter("DateOfExpiry", typeof(System.DateTime));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var address_1Parameter = address_1 != null ?
                new ObjectParameter("Address_1", address_1) :
                new ObjectParameter("Address_1", typeof(string));
    
            var address_2Parameter = address_2 != null ?
                new ObjectParameter("Address_2", address_2) :
                new ObjectParameter("Address_2", typeof(string));
    
            var postBoxParameter = postBox != null ?
                new ObjectParameter("PostBox", postBox) :
                new ObjectParameter("PostBox", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var landLineParameter = landLine != null ?
                new ObjectParameter("LandLine", landLine) :
                new ObjectParameter("LandLine", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var aR_EmployeeIDParameter = aR_EmployeeID != null ?
                new ObjectParameter("AR_EmployeeID", aR_EmployeeID) :
                new ObjectParameter("AR_EmployeeID", typeof(string));
    
            var aR_FirstNameParameter = aR_FirstName != null ?
                new ObjectParameter("AR_FirstName", aR_FirstName) :
                new ObjectParameter("AR_FirstName", typeof(string));
    
            var skill_idParameter = skill_id.HasValue ?
                new ObjectParameter("Skill_id", skill_id) :
                new ObjectParameter("Skill_id", typeof(long));
    
            var aR_MiddleNameParameter = aR_MiddleName != null ?
                new ObjectParameter("AR_MiddleName", aR_MiddleName) :
                new ObjectParameter("AR_MiddleName", typeof(string));
    
            var aR_LastNameParameter = aR_LastName != null ?
                new ObjectParameter("AR_LastName", aR_LastName) :
                new ObjectParameter("AR_LastName", typeof(string));
    
            var aR_EmailParameter = aR_Email != null ?
                new ObjectParameter("AR_Email", aR_Email) :
                new ObjectParameter("AR_Email", typeof(string));
    
            var aR_DesignationParameter = aR_Designation != null ?
                new ObjectParameter("AR_Designation", aR_Designation) :
                new ObjectParameter("AR_Designation", typeof(string));
    
            var aR_PhoneParameter = aR_Phone != null ?
                new ObjectParameter("AR_Phone", aR_Phone) :
                new ObjectParameter("AR_Phone", typeof(string));
    
            var aR_FaxParameter = aR_Fax != null ?
                new ObjectParameter("AR_Fax", aR_Fax) :
                new ObjectParameter("AR_Fax", typeof(string));
    
            var aR_MobileNoParameter = aR_MobileNo != null ?
                new ObjectParameter("AR_MobileNo", aR_MobileNo) :
                new ObjectParameter("AR_MobileNo", typeof(string));
    
            var aR_PreferredContactPersonParameter = aR_PreferredContactPerson != null ?
                new ObjectParameter("AR_PreferredContactPerson", aR_PreferredContactPerson) :
                new ObjectParameter("AR_PreferredContactPerson", typeof(string));
    
            var oCP_EmployeeIDParameter = oCP_EmployeeID != null ?
                new ObjectParameter("OCP_EmployeeID", oCP_EmployeeID) :
                new ObjectParameter("OCP_EmployeeID", typeof(string));
    
            var oCP_FirstNameParameter = oCP_FirstName != null ?
                new ObjectParameter("OCP_FirstName", oCP_FirstName) :
                new ObjectParameter("OCP_FirstName", typeof(string));
    
            var oCP_MiddleNameParameter = oCP_MiddleName != null ?
                new ObjectParameter("OCP_MiddleName", oCP_MiddleName) :
                new ObjectParameter("OCP_MiddleName", typeof(string));
    
            var oCP_LastNameParameter = oCP_LastName != null ?
                new ObjectParameter("OCP_LastName", oCP_LastName) :
                new ObjectParameter("OCP_LastName", typeof(string));
    
            var oCP_EmailParameter = oCP_Email != null ?
                new ObjectParameter("OCP_Email", oCP_Email) :
                new ObjectParameter("OCP_Email", typeof(string));
    
            var oCP_DesignationParameter = oCP_Designation != null ?
                new ObjectParameter("OCP_Designation", oCP_Designation) :
                new ObjectParameter("OCP_Designation", typeof(string));
    
            var oCP_PhoneParameter = oCP_Phone != null ?
                new ObjectParameter("OCP_Phone", oCP_Phone) :
                new ObjectParameter("OCP_Phone", typeof(string));
    
            var oCP_FaxParameter = oCP_Fax != null ?
                new ObjectParameter("OCP_Fax", oCP_Fax) :
                new ObjectParameter("OCP_Fax", typeof(string));
    
            var oCP_MobileNoParameter = oCP_MobileNo != null ?
                new ObjectParameter("OCP_MobileNo", oCP_MobileNo) :
                new ObjectParameter("OCP_MobileNo", typeof(string));
    
            var oCP_PreferredContactPersonParameter = oCP_PreferredContactPerson != null ?
                new ObjectParameter("OCP_PreferredContactPerson", oCP_PreferredContactPerson) :
                new ObjectParameter("OCP_PreferredContactPerson", typeof(string));
    
            var create_UserIDParameter = create_UserID != null ?
                new ObjectParameter("Create_UserID", create_UserID) :
                new ObjectParameter("Create_UserID", typeof(string));
    
            var create_UserNameParameter = create_UserName != null ?
                new ObjectParameter("Create_UserName", create_UserName) :
                new ObjectParameter("Create_UserName", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var sys_TimeParameter = sys_Time.HasValue ?
                new ObjectParameter("Sys_Time", sys_Time) :
                new ObjectParameter("Sys_Time", typeof(System.DateTime));
    
            var sys_DateParameter = sys_Date.HasValue ?
                new ObjectParameter("Sys_Date", sys_Date) :
                new ObjectParameter("Sys_Date", typeof(System.DateTime));
    
            var enterpriseBannerParameter = enterpriseBanner != null ?
                new ObjectParameter("EnterpriseBanner", enterpriseBanner) :
                new ObjectParameter("EnterpriseBanner", typeof(string));
    
            var empr_StatusParameter = empr_Status != null ?
                new ObjectParameter("Empr_Status", empr_Status) :
                new ObjectParameter("Empr_Status", typeof(string));
    
            var city_idParameter = city_id.HasValue ?
                new ObjectParameter("city_id", city_id) :
                new ObjectParameter("city_id", typeof(long));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(long));
    
            var speci_idParameter = speci_id.HasValue ?
                new ObjectParameter("speci_id", speci_id) :
                new ObjectParameter("speci_id", typeof(long));
    
            var employer_BannerParameter = employer_Banner != null ?
                new ObjectParameter("Employer_Banner", employer_Banner) :
                new ObjectParameter("Employer_Banner", typeof(string));
    
            var enterpriseIDParameter = enterpriseID != null ?
                new ObjectParameter("EnterpriseID", enterpriseID) :
                new ObjectParameter("EnterpriseID", typeof(string));
    
            var parentNameParameter = parentName != null ?
                new ObjectParameter("ParentName", parentName) :
                new ObjectParameter("ParentName", typeof(string));
    
            var employer_LogoParameter = employer_Logo != null ?
                new ObjectParameter("Employer_Logo", employer_Logo) :
                new ObjectParameter("Employer_Logo", typeof(string));
    
            var enterpriseLogoParameter = enterpriseLogo != null ?
                new ObjectParameter("EnterpriseLogo", enterpriseLogo) :
                new ObjectParameter("EnterpriseLogo", typeof(string));
    
            var tb_typeParameter = tb_type != null ?
                new ObjectParameter("tb_type", tb_type) :
                new ObjectParameter("tb_type", typeof(string));
    
            var dBLocationParameter = dBLocation != null ?
                new ObjectParameter("DBLocation", dBLocation) :
                new ObjectParameter("DBLocation", typeof(string));
    
            var applicationLocationParameter = applicationLocation != null ?
                new ObjectParameter("ApplicationLocation", applicationLocation) :
                new ObjectParameter("ApplicationLocation", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var del_statusParameter = del_status.HasValue ?
                new ObjectParameter("del_status", del_status) :
                new ObjectParameter("del_status", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var backupLocationParameter = backupLocation != null ?
                new ObjectParameter("BackupLocation", backupLocation) :
                new ObjectParameter("BackupLocation", typeof(string));
    
            var mailIdLocationParameter = mailIdLocation != null ?
                new ObjectParameter("MailIdLocation", mailIdLocation) :
                new ObjectParameter("MailIdLocation", typeof(string));
    
            var primaryFunctionalCurrencyParameter = primaryFunctionalCurrency != null ?
                new ObjectParameter("PrimaryFunctionalCurrency", primaryFunctionalCurrency) :
                new ObjectParameter("PrimaryFunctionalCurrency", typeof(string));
    
            var payPeriodTypeParameter = payPeriodType != null ?
                new ObjectParameter("PayPeriodType", payPeriodType) :
                new ObjectParameter("PayPeriodType", typeof(string));
    
            var employerTaxNoParameter = employerTaxNo != null ?
                new ObjectParameter("EmployerTaxNo", employerTaxNo) :
                new ObjectParameter("EmployerTaxNo", typeof(string));
    
            var employerPanNoParameter = employerPanNo != null ?
                new ObjectParameter("EmployerPanNo", employerPanNo) :
                new ObjectParameter("EmployerPanNo", typeof(string));
    
            var employerDinNoParameter = employerDinNo != null ?
                new ObjectParameter("EmployerDinNo", employerDinNo) :
                new ObjectParameter("EmployerDinNo", typeof(string));
    
            var employerBinNoParameter = employerBinNo != null ?
                new ObjectParameter("EmployerBinNo", employerBinNo) :
                new ObjectParameter("EmployerBinNo", typeof(string));
    
            var financialYearStartDateParameter = financialYearStartDate.HasValue ?
                new ObjectParameter("FinancialYearStartDate", financialYearStartDate) :
                new ObjectParameter("FinancialYearStartDate", typeof(System.DateTime));
    
            var financialYearEndDateParameter = financialYearEndDate.HasValue ?
                new ObjectParameter("FinancialYearEndDate", financialYearEndDate) :
                new ObjectParameter("FinancialYearEndDate", typeof(System.DateTime));
    
            var ent_StatusParameter = ent_Status != null ?
                new ObjectParameter("Ent_Status", ent_Status) :
                new ObjectParameter("Ent_Status", typeof(string));
    
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(long));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var eD_FirstNameParameter = eD_FirstName != null ?
                new ObjectParameter("ED_FirstName", eD_FirstName) :
                new ObjectParameter("ED_FirstName", typeof(string));
    
            var eD_MiddleNameParameter = eD_MiddleName != null ?
                new ObjectParameter("ED_MiddleName", eD_MiddleName) :
                new ObjectParameter("ED_MiddleName", typeof(string));
    
            var eD_LastNameParameter = eD_LastName != null ?
                new ObjectParameter("ED_LastName", eD_LastName) :
                new ObjectParameter("ED_LastName", typeof(string));
    
            var eD_DesignationParameter = eD_Designation != null ?
                new ObjectParameter("ED_Designation", eD_Designation) :
                new ObjectParameter("ED_Designation", typeof(string));
    
            var eD_EmailParameter = eD_Email != null ?
                new ObjectParameter("ED_Email", eD_Email) :
                new ObjectParameter("ED_Email", typeof(string));
    
            var drivingLicenseNumberParameter = drivingLicenseNumber != null ?
                new ObjectParameter("DrivingLicenseNumber", drivingLicenseNumber) :
                new ObjectParameter("DrivingLicenseNumber", typeof(string));
    
            var drivingLicenseIssueDateParameter = drivingLicenseIssueDate.HasValue ?
                new ObjectParameter("DrivingLicenseIssueDate", drivingLicenseIssueDate) :
                new ObjectParameter("DrivingLicenseIssueDate", typeof(System.DateTime));
    
            var drivingLicenseExpiryDateParameter = drivingLicenseExpiryDate.HasValue ?
                new ObjectParameter("DrivingLicenseExpiryDate", drivingLicenseExpiryDate) :
                new ObjectParameter("DrivingLicenseExpiryDate", typeof(System.DateTime));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var bloodGroupParameter = bloodGroup != null ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(string));
    
            var contractStartDateParameter = contractStartDate.HasValue ?
                new ObjectParameter("ContractStartDate", contractStartDate) :
                new ObjectParameter("ContractStartDate", typeof(System.DateTime));
    
            var contractEndDateParameter = contractEndDate.HasValue ?
                new ObjectParameter("ContractEndDate", contractEndDate) :
                new ObjectParameter("ContractEndDate", typeof(System.DateTime));
    
            var workStartDateParameter = workStartDate.HasValue ?
                new ObjectParameter("WorkStartDate", workStartDate) :
                new ObjectParameter("WorkStartDate", typeof(System.DateTime));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var retirementDateParameter = retirementDate.HasValue ?
                new ObjectParameter("RetirementDate", retirementDate) :
                new ObjectParameter("RetirementDate", typeof(System.DateTime));
    
            var noOfDependentsParameter = noOfDependents != null ?
                new ObjectParameter("NoOfDependents", noOfDependents) :
                new ObjectParameter("NoOfDependents", typeof(string));
    
            var eD_PreferredContactModeParameter = eD_PreferredContactMode.HasValue ?
                new ObjectParameter("ED_PreferredContactMode", eD_PreferredContactMode) :
                new ObjectParameter("ED_PreferredContactMode", typeof(int));
    
            var passportNoParameter = passportNo != null ?
                new ObjectParameter("PassportNo", passportNo) :
                new ObjectParameter("PassportNo", typeof(string));
    
            var issueDateParameter = issueDate.HasValue ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var issuingAuthorityParameter = issuingAuthority != null ?
                new ObjectParameter("IssuingAuthority", issuingAuthority) :
                new ObjectParameter("IssuingAuthority", typeof(string));
    
            var issuingCountryParameter = issuingCountry != null ?
                new ObjectParameter("IssuingCountry", issuingCountry) :
                new ObjectParameter("IssuingCountry", typeof(string));
    
            var visaNoParameter = visaNo != null ?
                new ObjectParameter("VisaNo", visaNo) :
                new ObjectParameter("VisaNo", typeof(string));
    
            var visa_IssueDateParameter = visa_IssueDate.HasValue ?
                new ObjectParameter("Visa_IssueDate", visa_IssueDate) :
                new ObjectParameter("Visa_IssueDate", typeof(System.DateTime));
    
            var visa_ExpiryDateParameter = visa_ExpiryDate.HasValue ?
                new ObjectParameter("Visa_ExpiryDate", visa_ExpiryDate) :
                new ObjectParameter("Visa_ExpiryDate", typeof(System.DateTime));
    
            var visa_IssuingAuthorityParameter = visa_IssuingAuthority != null ?
                new ObjectParameter("Visa_IssuingAuthority", visa_IssuingAuthority) :
                new ObjectParameter("Visa_IssuingAuthority", typeof(string));
    
            var visa_IssuingCountryParameter = visa_IssuingCountry != null ?
                new ObjectParameter("Visa_IssuingCountry", visa_IssuingCountry) :
                new ObjectParameter("Visa_IssuingCountry", typeof(string));
    
            var workPermitNoParameter = workPermitNo != null ?
                new ObjectParameter("WorkPermitNo", workPermitNo) :
                new ObjectParameter("WorkPermitNo", typeof(string));
    
            var work_IssueDateParameter = work_IssueDate.HasValue ?
                new ObjectParameter("Work_IssueDate", work_IssueDate) :
                new ObjectParameter("Work_IssueDate", typeof(System.DateTime));
    
            var work_ExpiryDateParameter = work_ExpiryDate.HasValue ?
                new ObjectParameter("Work_ExpiryDate", work_ExpiryDate) :
                new ObjectParameter("Work_ExpiryDate", typeof(System.DateTime));
    
            var work_IssuingAuthorityParameter = work_IssuingAuthority != null ?
                new ObjectParameter("Work_IssuingAuthority", work_IssuingAuthority) :
                new ObjectParameter("Work_IssuingAuthority", typeof(string));
    
            var work_IssuingCountryParameter = work_IssuingCountry != null ?
                new ObjectParameter("Work_IssuingCountry", work_IssuingCountry) :
                new ObjectParameter("Work_IssuingCountry", typeof(string));
    
            var eCP_FirstNameParameter = eCP_FirstName != null ?
                new ObjectParameter("ECP_FirstName", eCP_FirstName) :
                new ObjectParameter("ECP_FirstName", typeof(string));
    
            var eCP_MiddleNameParameter = eCP_MiddleName != null ?
                new ObjectParameter("ECP_MiddleName", eCP_MiddleName) :
                new ObjectParameter("ECP_MiddleName", typeof(string));
    
            var eCP_LastNameParameter = eCP_LastName != null ?
                new ObjectParameter("ECP_LastName", eCP_LastName) :
                new ObjectParameter("ECP_LastName", typeof(string));
    
            var eCP_EmailParameter = eCP_Email != null ?
                new ObjectParameter("ECP_Email", eCP_Email) :
                new ObjectParameter("ECP_Email", typeof(string));
    
            var eCP_RelationParameter = eCP_Relation != null ?
                new ObjectParameter("ECP_Relation", eCP_Relation) :
                new ObjectParameter("ECP_Relation", typeof(string));
    
            var eCP_PhoneParameter = eCP_Phone != null ?
                new ObjectParameter("ECP_Phone", eCP_Phone) :
                new ObjectParameter("ECP_Phone", typeof(string));
    
            var eCP_FaxParameter = eCP_Fax != null ?
                new ObjectParameter("ECP_Fax", eCP_Fax) :
                new ObjectParameter("ECP_Fax", typeof(string));
    
            var eCP_MobileNoParameter = eCP_MobileNo != null ?
                new ObjectParameter("ECP_MobileNo", eCP_MobileNo) :
                new ObjectParameter("ECP_MobileNo", typeof(string));
    
            var eCP_CountryOfResidencyParameter = eCP_CountryOfResidency != null ?
                new ObjectParameter("ECP_CountryOfResidency", eCP_CountryOfResidency) :
                new ObjectParameter("ECP_CountryOfResidency", typeof(string));
    
            var eCP_EmergencyContactPersonParameter = eCP_EmergencyContactPerson != null ?
                new ObjectParameter("ECP_EmergencyContactPerson", eCP_EmergencyContactPerson) :
                new ObjectParameter("ECP_EmergencyContactPerson", typeof(string));
    
            var eCP_PreferredContactModeParameter = eCP_PreferredContactMode.HasValue ?
                new ObjectParameter("ECP_PreferredContactMode", eCP_PreferredContactMode) :
                new ObjectParameter("ECP_PreferredContactMode", typeof(int));
    
            var employee_StatusParameter = employee_Status != null ?
                new ObjectParameter("Employee_Status", employee_Status) :
                new ObjectParameter("Employee_Status", typeof(string));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ProcessEmployers", country_idParameter, state_idParameter, emp_idParameter, employerIDParameter, employerNameParameter, parentCompanyParameter, permanentRegistrationParameter, loginIDParameter, passwordParameter, dateOfInceptionParameter, dateOfExpiryParameter, cityParameter, address_1Parameter, address_2Parameter, postBoxParameter, zipCodeParameter, landLineParameter, faxParameter, emailAddressParameter, websiteParameter, aR_EmployeeIDParameter, aR_FirstNameParameter, skill_idParameter, aR_MiddleNameParameter, aR_LastNameParameter, aR_EmailParameter, aR_DesignationParameter, aR_PhoneParameter, aR_FaxParameter, aR_MobileNoParameter, aR_PreferredContactPersonParameter, oCP_EmployeeIDParameter, oCP_FirstNameParameter, oCP_MiddleNameParameter, oCP_LastNameParameter, oCP_EmailParameter, oCP_DesignationParameter, oCP_PhoneParameter, oCP_FaxParameter, oCP_MobileNoParameter, oCP_PreferredContactPersonParameter, create_UserIDParameter, create_UserNameParameter, update_UserIDParameter, update_UserNameParameter, sys_TimeParameter, sys_DateParameter, enterpriseBannerParameter, empr_StatusParameter, city_idParameter, course_idParameter, speci_idParameter, employer_BannerParameter, enterpriseIDParameter, parentNameParameter, employer_LogoParameter, enterpriseLogoParameter, tb_typeParameter, dBLocationParameter, applicationLocationParameter, countryParameter, del_statusParameter, stateParameter, backupLocationParameter, mailIdLocationParameter, primaryFunctionalCurrencyParameter, payPeriodTypeParameter, employerTaxNoParameter, employerPanNoParameter, employerDinNoParameter, employerBinNoParameter, financialYearStartDateParameter, financialYearEndDateParameter, ent_StatusParameter, employee_idParameter, employeeIDParameter, eD_FirstNameParameter, eD_MiddleNameParameter, eD_LastNameParameter, eD_DesignationParameter, eD_EmailParameter, drivingLicenseNumberParameter, drivingLicenseIssueDateParameter, drivingLicenseExpiryDateParameter, mobileNoParameter, phoneNoParameter, extParameter, bloodGroupParameter, contractStartDateParameter, contractEndDateParameter, workStartDateParameter, dateOfBirthParameter, retirementDateParameter, noOfDependentsParameter, eD_PreferredContactModeParameter, passportNoParameter, issueDateParameter, expiryDateParameter, issuingAuthorityParameter, issuingCountryParameter, visaNoParameter, visa_IssueDateParameter, visa_ExpiryDateParameter, visa_IssuingAuthorityParameter, visa_IssuingCountryParameter, workPermitNoParameter, work_IssueDateParameter, work_ExpiryDateParameter, work_IssuingAuthorityParameter, work_IssuingCountryParameter, eCP_FirstNameParameter, eCP_MiddleNameParameter, eCP_LastNameParameter, eCP_EmailParameter, eCP_RelationParameter, eCP_PhoneParameter, eCP_FaxParameter, eCP_MobileNoParameter, eCP_CountryOfResidencyParameter, eCP_EmergencyContactPersonParameter, eCP_PreferredContactModeParameter, employee_StatusParameter, b_idParameter, o_idParameter, project_idParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual int usp_ProcessMaterialRequest(Nullable<long> emp_id, Nullable<long> as_id, Nullable<long> b_id, Nullable<long> o_id, Nullable<long> project_id, Nullable<long> materialReq_id, string materialrequestID, string contactperson_Name, string contactperson_MobileNo, string contactperson_Designation, Nullable<System.DateTime> projectstart_dt, string remarks, Nullable<long> req_TransId, Nullable<System.DateTime> dateof_delivery, string delivery_location, Nullable<long> sl_no, Nullable<long> stockitem_id, string description, Nullable<decimal> qty, Nullable<long> unit_id, Nullable<bool> d_status, string purchasereqID, Nullable<long> supp_id, string supplier_ID, string employerID, string branchId, string org_ID, string projectID, Nullable<long> purchase_id, string update_UserID, string update_UserName, Nullable<long> purchase_TransId, Nullable<bool> del_status, Nullable<long> pQuotation_Id, string quotationID, Nullable<long> pQTrans_Id, Nullable<decimal> price, string discount_type, Nullable<decimal> discount, Nullable<decimal> tax_Amount, Nullable<decimal> total_Amount, Nullable<long> pQShip_Id, string recived_Company, string contact_Person, string mobile, string land_Line, string fax, string companyTax_ID, string mode_Shipment, string port_Origon, string port_Destination, string shipment_Terms, string date_Delivery, Nullable<long> country_id, Nullable<long> state_id, string city, string delivery_Address, string delivery_Terms, Nullable<int> mRow, Nullable<int> cval, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var as_idParameter = as_id.HasValue ?
                new ObjectParameter("As_id", as_id) :
                new ObjectParameter("As_id", typeof(long));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var materialReq_idParameter = materialReq_id.HasValue ?
                new ObjectParameter("MaterialReq_id", materialReq_id) :
                new ObjectParameter("MaterialReq_id", typeof(long));
    
            var materialrequestIDParameter = materialrequestID != null ?
                new ObjectParameter("materialrequestID", materialrequestID) :
                new ObjectParameter("materialrequestID", typeof(string));
    
            var contactperson_NameParameter = contactperson_Name != null ?
                new ObjectParameter("contactperson_Name", contactperson_Name) :
                new ObjectParameter("contactperson_Name", typeof(string));
    
            var contactperson_MobileNoParameter = contactperson_MobileNo != null ?
                new ObjectParameter("contactperson_MobileNo", contactperson_MobileNo) :
                new ObjectParameter("contactperson_MobileNo", typeof(string));
    
            var contactperson_DesignationParameter = contactperson_Designation != null ?
                new ObjectParameter("contactperson_Designation", contactperson_Designation) :
                new ObjectParameter("contactperson_Designation", typeof(string));
    
            var projectstart_dtParameter = projectstart_dt.HasValue ?
                new ObjectParameter("projectstart_dt", projectstart_dt) :
                new ObjectParameter("projectstart_dt", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var req_TransIdParameter = req_TransId.HasValue ?
                new ObjectParameter("Req_TransId", req_TransId) :
                new ObjectParameter("Req_TransId", typeof(long));
    
            var dateof_deliveryParameter = dateof_delivery.HasValue ?
                new ObjectParameter("dateof_delivery", dateof_delivery) :
                new ObjectParameter("dateof_delivery", typeof(System.DateTime));
    
            var delivery_locationParameter = delivery_location != null ?
                new ObjectParameter("delivery_location", delivery_location) :
                new ObjectParameter("delivery_location", typeof(string));
    
            var sl_noParameter = sl_no.HasValue ?
                new ObjectParameter("sl_no", sl_no) :
                new ObjectParameter("sl_no", typeof(long));
    
            var stockitem_idParameter = stockitem_id.HasValue ?
                new ObjectParameter("stockitem_id", stockitem_id) :
                new ObjectParameter("stockitem_id", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(decimal));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(long));
    
            var d_statusParameter = d_status.HasValue ?
                new ObjectParameter("d_status", d_status) :
                new ObjectParameter("d_status", typeof(bool));
    
            var purchasereqIDParameter = purchasereqID != null ?
                new ObjectParameter("purchasereqID", purchasereqID) :
                new ObjectParameter("purchasereqID", typeof(string));
    
            var supp_idParameter = supp_id.HasValue ?
                new ObjectParameter("supp_id", supp_id) :
                new ObjectParameter("supp_id", typeof(long));
    
            var supplier_IDParameter = supplier_ID != null ?
                new ObjectParameter("Supplier_ID", supplier_ID) :
                new ObjectParameter("Supplier_ID", typeof(string));
    
            var employerIDParameter = employerID != null ?
                new ObjectParameter("EmployerID", employerID) :
                new ObjectParameter("EmployerID", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var org_IDParameter = org_ID != null ?
                new ObjectParameter("Org_ID", org_ID) :
                new ObjectParameter("Org_ID", typeof(string));
    
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(long));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var purchase_TransIdParameter = purchase_TransId.HasValue ?
                new ObjectParameter("purchase_TransId", purchase_TransId) :
                new ObjectParameter("purchase_TransId", typeof(long));
    
            var del_statusParameter = del_status.HasValue ?
                new ObjectParameter("del_status", del_status) :
                new ObjectParameter("del_status", typeof(bool));
    
            var pQuotation_IdParameter = pQuotation_Id.HasValue ?
                new ObjectParameter("PQuotation_Id", pQuotation_Id) :
                new ObjectParameter("PQuotation_Id", typeof(long));
    
            var quotationIDParameter = quotationID != null ?
                new ObjectParameter("QuotationID", quotationID) :
                new ObjectParameter("QuotationID", typeof(string));
    
            var pQTrans_IdParameter = pQTrans_Id.HasValue ?
                new ObjectParameter("PQTrans_Id", pQTrans_Id) :
                new ObjectParameter("PQTrans_Id", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var discount_typeParameter = discount_type != null ?
                new ObjectParameter("Discount_type", discount_type) :
                new ObjectParameter("Discount_type", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var tax_AmountParameter = tax_Amount.HasValue ?
                new ObjectParameter("Tax_Amount", tax_Amount) :
                new ObjectParameter("Tax_Amount", typeof(decimal));
    
            var total_AmountParameter = total_Amount.HasValue ?
                new ObjectParameter("Total_Amount", total_Amount) :
                new ObjectParameter("Total_Amount", typeof(decimal));
    
            var pQShip_IdParameter = pQShip_Id.HasValue ?
                new ObjectParameter("PQShip_Id", pQShip_Id) :
                new ObjectParameter("PQShip_Id", typeof(long));
    
            var recived_CompanyParameter = recived_Company != null ?
                new ObjectParameter("Recived_Company", recived_Company) :
                new ObjectParameter("Recived_Company", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var land_LineParameter = land_Line != null ?
                new ObjectParameter("Land_Line", land_Line) :
                new ObjectParameter("Land_Line", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var companyTax_IDParameter = companyTax_ID != null ?
                new ObjectParameter("CompanyTax_ID", companyTax_ID) :
                new ObjectParameter("CompanyTax_ID", typeof(string));
    
            var mode_ShipmentParameter = mode_Shipment != null ?
                new ObjectParameter("Mode_Shipment", mode_Shipment) :
                new ObjectParameter("Mode_Shipment", typeof(string));
    
            var port_OrigonParameter = port_Origon != null ?
                new ObjectParameter("Port_Origon", port_Origon) :
                new ObjectParameter("Port_Origon", typeof(string));
    
            var port_DestinationParameter = port_Destination != null ?
                new ObjectParameter("Port_Destination", port_Destination) :
                new ObjectParameter("Port_Destination", typeof(string));
    
            var shipment_TermsParameter = shipment_Terms != null ?
                new ObjectParameter("Shipment_Terms", shipment_Terms) :
                new ObjectParameter("Shipment_Terms", typeof(string));
    
            var date_DeliveryParameter = date_Delivery != null ?
                new ObjectParameter("Date_Delivery", date_Delivery) :
                new ObjectParameter("Date_Delivery", typeof(string));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(long));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("State_id", state_id) :
                new ObjectParameter("State_id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var delivery_AddressParameter = delivery_Address != null ?
                new ObjectParameter("Delivery_Address", delivery_Address) :
                new ObjectParameter("Delivery_Address", typeof(string));
    
            var delivery_TermsParameter = delivery_Terms != null ?
                new ObjectParameter("Delivery_Terms", delivery_Terms) :
                new ObjectParameter("Delivery_Terms", typeof(string));
    
            var mRowParameter = mRow.HasValue ?
                new ObjectParameter("mRow", mRow) :
                new ObjectParameter("mRow", typeof(int));
    
            var cvalParameter = cval.HasValue ?
                new ObjectParameter("cval", cval) :
                new ObjectParameter("cval", typeof(int));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcessMaterialRequest", emp_idParameter, as_idParameter, b_idParameter, o_idParameter, project_idParameter, materialReq_idParameter, materialrequestIDParameter, contactperson_NameParameter, contactperson_MobileNoParameter, contactperson_DesignationParameter, projectstart_dtParameter, remarksParameter, req_TransIdParameter, dateof_deliveryParameter, delivery_locationParameter, sl_noParameter, stockitem_idParameter, descriptionParameter, qtyParameter, unit_idParameter, d_statusParameter, purchasereqIDParameter, supp_idParameter, supplier_IDParameter, employerIDParameter, branchIdParameter, org_IDParameter, projectIDParameter, purchase_idParameter, update_UserIDParameter, update_UserNameParameter, purchase_TransIdParameter, del_statusParameter, pQuotation_IdParameter, quotationIDParameter, pQTrans_IdParameter, priceParameter, discount_typeParameter, discountParameter, tax_AmountParameter, total_AmountParameter, pQShip_IdParameter, recived_CompanyParameter, contact_PersonParameter, mobileParameter, land_LineParameter, faxParameter, companyTax_IDParameter, mode_ShipmentParameter, port_OrigonParameter, port_DestinationParameter, shipment_TermsParameter, date_DeliveryParameter, country_idParameter, state_idParameter, cityParameter, delivery_AddressParameter, delivery_TermsParameter, mRowParameter, cvalParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual int usp_ProcessOrderDetails(Nullable<long> emp_id, Nullable<long> as_id, Nullable<long> b_id, Nullable<long> o_id, Nullable<long> project_id, Nullable<long> materialReq_id, Nullable<long> pQuotation_Id, string pOrderID, Nullable<long> pOrderTrans_Id, Nullable<long> stockitem_id, string description, string remarks, Nullable<long> req_TransId, Nullable<System.DateTime> dateof_delivery, string delivery_location, Nullable<long> sl_no, Nullable<long> qty, Nullable<long> supp_id, Nullable<decimal> price, string discount_type, Nullable<decimal> discount, Nullable<decimal> tax_Amount, Nullable<decimal> total_Amount, Nullable<long> unit_id, Nullable<bool> d_status, Nullable<long> pOrder_Id, string updateUser_id, string updateUser_name, Nullable<int> rowStatus, Nullable<long> pQShip_Id, string recived_Company, string contact_Person, string mobile, string land_Line, string fax, string companyTax_ID, string mode_Shipment, string port_Origon, string port_Destination, string shipment_Terms, Nullable<System.DateTime> date_Delivery, Nullable<long> country_id, Nullable<long> state_id, string city, string delivery_Address, string delivery_Terms, string update_UserName, Nullable<long> invoice_Id, string invoice_Company, string landLine, string email_ID, string payment_Terms, Nullable<int> mRow, Nullable<int> cval, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var as_idParameter = as_id.HasValue ?
                new ObjectParameter("As_id", as_id) :
                new ObjectParameter("As_id", typeof(long));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var materialReq_idParameter = materialReq_id.HasValue ?
                new ObjectParameter("MaterialReq_id", materialReq_id) :
                new ObjectParameter("MaterialReq_id", typeof(long));
    
            var pQuotation_IdParameter = pQuotation_Id.HasValue ?
                new ObjectParameter("PQuotation_Id", pQuotation_Id) :
                new ObjectParameter("PQuotation_Id", typeof(long));
    
            var pOrderIDParameter = pOrderID != null ?
                new ObjectParameter("POrderID", pOrderID) :
                new ObjectParameter("POrderID", typeof(string));
    
            var pOrderTrans_IdParameter = pOrderTrans_Id.HasValue ?
                new ObjectParameter("POrderTrans_Id", pOrderTrans_Id) :
                new ObjectParameter("POrderTrans_Id", typeof(long));
    
            var stockitem_idParameter = stockitem_id.HasValue ?
                new ObjectParameter("stockitem_id", stockitem_id) :
                new ObjectParameter("stockitem_id", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var req_TransIdParameter = req_TransId.HasValue ?
                new ObjectParameter("Req_TransId", req_TransId) :
                new ObjectParameter("Req_TransId", typeof(long));
    
            var dateof_deliveryParameter = dateof_delivery.HasValue ?
                new ObjectParameter("dateof_delivery", dateof_delivery) :
                new ObjectParameter("dateof_delivery", typeof(System.DateTime));
    
            var delivery_locationParameter = delivery_location != null ?
                new ObjectParameter("delivery_location", delivery_location) :
                new ObjectParameter("delivery_location", typeof(string));
    
            var sl_noParameter = sl_no.HasValue ?
                new ObjectParameter("sl_no", sl_no) :
                new ObjectParameter("sl_no", typeof(long));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(long));
    
            var supp_idParameter = supp_id.HasValue ?
                new ObjectParameter("supp_id", supp_id) :
                new ObjectParameter("supp_id", typeof(long));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var discount_typeParameter = discount_type != null ?
                new ObjectParameter("Discount_type", discount_type) :
                new ObjectParameter("Discount_type", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var tax_AmountParameter = tax_Amount.HasValue ?
                new ObjectParameter("Tax_Amount", tax_Amount) :
                new ObjectParameter("Tax_Amount", typeof(decimal));
    
            var total_AmountParameter = total_Amount.HasValue ?
                new ObjectParameter("Total_Amount", total_Amount) :
                new ObjectParameter("Total_Amount", typeof(decimal));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(long));
    
            var d_statusParameter = d_status.HasValue ?
                new ObjectParameter("d_status", d_status) :
                new ObjectParameter("d_status", typeof(bool));
    
            var pOrder_IdParameter = pOrder_Id.HasValue ?
                new ObjectParameter("POrder_Id", pOrder_Id) :
                new ObjectParameter("POrder_Id", typeof(long));
    
            var updateUser_idParameter = updateUser_id != null ?
                new ObjectParameter("UpdateUser_id", updateUser_id) :
                new ObjectParameter("UpdateUser_id", typeof(string));
    
            var updateUser_nameParameter = updateUser_name != null ?
                new ObjectParameter("UpdateUser_name", updateUser_name) :
                new ObjectParameter("UpdateUser_name", typeof(string));
    
            var rowStatusParameter = rowStatus.HasValue ?
                new ObjectParameter("rowStatus", rowStatus) :
                new ObjectParameter("rowStatus", typeof(int));
    
            var pQShip_IdParameter = pQShip_Id.HasValue ?
                new ObjectParameter("PQShip_Id", pQShip_Id) :
                new ObjectParameter("PQShip_Id", typeof(long));
    
            var recived_CompanyParameter = recived_Company != null ?
                new ObjectParameter("Recived_Company", recived_Company) :
                new ObjectParameter("Recived_Company", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var land_LineParameter = land_Line != null ?
                new ObjectParameter("Land_Line", land_Line) :
                new ObjectParameter("Land_Line", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var companyTax_IDParameter = companyTax_ID != null ?
                new ObjectParameter("CompanyTax_ID", companyTax_ID) :
                new ObjectParameter("CompanyTax_ID", typeof(string));
    
            var mode_ShipmentParameter = mode_Shipment != null ?
                new ObjectParameter("Mode_Shipment", mode_Shipment) :
                new ObjectParameter("Mode_Shipment", typeof(string));
    
            var port_OrigonParameter = port_Origon != null ?
                new ObjectParameter("Port_Origon", port_Origon) :
                new ObjectParameter("Port_Origon", typeof(string));
    
            var port_DestinationParameter = port_Destination != null ?
                new ObjectParameter("Port_Destination", port_Destination) :
                new ObjectParameter("Port_Destination", typeof(string));
    
            var shipment_TermsParameter = shipment_Terms != null ?
                new ObjectParameter("Shipment_Terms", shipment_Terms) :
                new ObjectParameter("Shipment_Terms", typeof(string));
    
            var date_DeliveryParameter = date_Delivery.HasValue ?
                new ObjectParameter("Date_Delivery", date_Delivery) :
                new ObjectParameter("Date_Delivery", typeof(System.DateTime));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(long));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("State_id", state_id) :
                new ObjectParameter("State_id", typeof(long));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var delivery_AddressParameter = delivery_Address != null ?
                new ObjectParameter("Delivery_Address", delivery_Address) :
                new ObjectParameter("Delivery_Address", typeof(string));
    
            var delivery_TermsParameter = delivery_Terms != null ?
                new ObjectParameter("Delivery_Terms", delivery_Terms) :
                new ObjectParameter("Delivery_Terms", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var invoice_IdParameter = invoice_Id.HasValue ?
                new ObjectParameter("Invoice_Id", invoice_Id) :
                new ObjectParameter("Invoice_Id", typeof(long));
    
            var invoice_CompanyParameter = invoice_Company != null ?
                new ObjectParameter("Invoice_Company", invoice_Company) :
                new ObjectParameter("Invoice_Company", typeof(string));
    
            var landLineParameter = landLine != null ?
                new ObjectParameter("LandLine", landLine) :
                new ObjectParameter("LandLine", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            var payment_TermsParameter = payment_Terms != null ?
                new ObjectParameter("Payment_Terms", payment_Terms) :
                new ObjectParameter("Payment_Terms", typeof(string));
    
            var mRowParameter = mRow.HasValue ?
                new ObjectParameter("mRow", mRow) :
                new ObjectParameter("mRow", typeof(int));
    
            var cvalParameter = cval.HasValue ?
                new ObjectParameter("cval", cval) :
                new ObjectParameter("cval", typeof(int));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcessOrderDetails", emp_idParameter, as_idParameter, b_idParameter, o_idParameter, project_idParameter, materialReq_idParameter, pQuotation_IdParameter, pOrderIDParameter, pOrderTrans_IdParameter, stockitem_idParameter, descriptionParameter, remarksParameter, req_TransIdParameter, dateof_deliveryParameter, delivery_locationParameter, sl_noParameter, qtyParameter, supp_idParameter, priceParameter, discount_typeParameter, discountParameter, tax_AmountParameter, total_AmountParameter, unit_idParameter, d_statusParameter, pOrder_IdParameter, updateUser_idParameter, updateUser_nameParameter, rowStatusParameter, pQShip_IdParameter, recived_CompanyParameter, contact_PersonParameter, mobileParameter, land_LineParameter, faxParameter, companyTax_IDParameter, mode_ShipmentParameter, port_OrigonParameter, port_DestinationParameter, shipment_TermsParameter, date_DeliveryParameter, country_idParameter, state_idParameter, cityParameter, delivery_AddressParameter, delivery_TermsParameter, update_UserNameParameter, invoice_IdParameter, invoice_CompanyParameter, landLineParameter, email_IDParameter, payment_TermsParameter, mRowParameter, cvalParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ProcessProjects(Nullable<long> project_id, string projectID, string projectName, string costCenter, string localName, string risk_Description, Nullable<long> o_id, string type, string address, string location, string project_Manager, Nullable<System.DateTime> plan_startdt, Nullable<System.DateTime> actual_startdt, Nullable<System.DateTime> plan_Enddt, Nullable<System.DateTime> actual_Enddt, string client, string contact_no, string contact_Description, Nullable<System.DateTime> contact_StartDt, Nullable<System.DateTime> contact_EndDt, string project_RefNo, string noofShift_Req, string update_UserID, string update_UserName, string noofPositions_Req, string noofEmp_Assigned, string vaccant_positions, Nullable<long> rack_id, string rackID, string rackDescription, Nullable<long> floor_id, string floorID, string floorDescription, Nullable<long> row_id, string rowID, string rowDescription, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var localNameParameter = localName != null ?
                new ObjectParameter("LocalName", localName) :
                new ObjectParameter("LocalName", typeof(string));
    
            var risk_DescriptionParameter = risk_Description != null ?
                new ObjectParameter("Risk_Description", risk_Description) :
                new ObjectParameter("Risk_Description", typeof(string));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var project_ManagerParameter = project_Manager != null ?
                new ObjectParameter("Project_Manager", project_Manager) :
                new ObjectParameter("Project_Manager", typeof(string));
    
            var plan_startdtParameter = plan_startdt.HasValue ?
                new ObjectParameter("Plan_startdt", plan_startdt) :
                new ObjectParameter("Plan_startdt", typeof(System.DateTime));
    
            var actual_startdtParameter = actual_startdt.HasValue ?
                new ObjectParameter("Actual_startdt", actual_startdt) :
                new ObjectParameter("Actual_startdt", typeof(System.DateTime));
    
            var plan_EnddtParameter = plan_Enddt.HasValue ?
                new ObjectParameter("Plan_Enddt", plan_Enddt) :
                new ObjectParameter("Plan_Enddt", typeof(System.DateTime));
    
            var actual_EnddtParameter = actual_Enddt.HasValue ?
                new ObjectParameter("Actual_Enddt", actual_Enddt) :
                new ObjectParameter("Actual_Enddt", typeof(System.DateTime));
    
            var clientParameter = client != null ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("Contact_no", contact_no) :
                new ObjectParameter("Contact_no", typeof(string));
    
            var contact_DescriptionParameter = contact_Description != null ?
                new ObjectParameter("Contact_Description", contact_Description) :
                new ObjectParameter("Contact_Description", typeof(string));
    
            var contact_StartDtParameter = contact_StartDt.HasValue ?
                new ObjectParameter("Contact_StartDt", contact_StartDt) :
                new ObjectParameter("Contact_StartDt", typeof(System.DateTime));
    
            var contact_EndDtParameter = contact_EndDt.HasValue ?
                new ObjectParameter("Contact_EndDt", contact_EndDt) :
                new ObjectParameter("Contact_EndDt", typeof(System.DateTime));
    
            var project_RefNoParameter = project_RefNo != null ?
                new ObjectParameter("Project_RefNo", project_RefNo) :
                new ObjectParameter("Project_RefNo", typeof(string));
    
            var noofShift_ReqParameter = noofShift_Req != null ?
                new ObjectParameter("NoofShift_Req", noofShift_Req) :
                new ObjectParameter("NoofShift_Req", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var noofPositions_ReqParameter = noofPositions_Req != null ?
                new ObjectParameter("NoofPositions_Req", noofPositions_Req) :
                new ObjectParameter("NoofPositions_Req", typeof(string));
    
            var noofEmp_AssignedParameter = noofEmp_Assigned != null ?
                new ObjectParameter("NoofEmp_Assigned", noofEmp_Assigned) :
                new ObjectParameter("NoofEmp_Assigned", typeof(string));
    
            var vaccant_positionsParameter = vaccant_positions != null ?
                new ObjectParameter("Vaccant_positions", vaccant_positions) :
                new ObjectParameter("Vaccant_positions", typeof(string));
    
            var rack_idParameter = rack_id.HasValue ?
                new ObjectParameter("rack_id", rack_id) :
                new ObjectParameter("rack_id", typeof(long));
    
            var rackIDParameter = rackID != null ?
                new ObjectParameter("RackID", rackID) :
                new ObjectParameter("RackID", typeof(string));
    
            var rackDescriptionParameter = rackDescription != null ?
                new ObjectParameter("RackDescription", rackDescription) :
                new ObjectParameter("RackDescription", typeof(string));
    
            var floor_idParameter = floor_id.HasValue ?
                new ObjectParameter("floor_id", floor_id) :
                new ObjectParameter("floor_id", typeof(long));
    
            var floorIDParameter = floorID != null ?
                new ObjectParameter("FloorID", floorID) :
                new ObjectParameter("FloorID", typeof(string));
    
            var floorDescriptionParameter = floorDescription != null ?
                new ObjectParameter("FloorDescription", floorDescription) :
                new ObjectParameter("FloorDescription", typeof(string));
    
            var row_idParameter = row_id.HasValue ?
                new ObjectParameter("row_id", row_id) :
                new ObjectParameter("row_id", typeof(long));
    
            var rowIDParameter = rowID != null ?
                new ObjectParameter("RowID", rowID) :
                new ObjectParameter("RowID", typeof(string));
    
            var rowDescriptionParameter = rowDescription != null ?
                new ObjectParameter("RowDescription", rowDescription) :
                new ObjectParameter("RowDescription", typeof(string));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ProcessProjects", project_idParameter, projectIDParameter, projectNameParameter, costCenterParameter, localNameParameter, risk_DescriptionParameter, o_idParameter, typeParameter, addressParameter, locationParameter, project_ManagerParameter, plan_startdtParameter, actual_startdtParameter, plan_EnddtParameter, actual_EnddtParameter, clientParameter, contact_noParameter, contact_DescriptionParameter, contact_StartDtParameter, contact_EndDtParameter, project_RefNoParameter, noofShift_ReqParameter, update_UserIDParameter, update_UserNameParameter, noofPositions_ReqParameter, noofEmp_AssignedParameter, vaccant_positionsParameter, rack_idParameter, rackIDParameter, rackDescriptionParameter, floor_idParameter, floorIDParameter, floorDescriptionParameter, row_idParameter, rowIDParameter, rowDescriptionParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual int usp_ProcessReciptVouchers(Nullable<long> voucherNo, string voucherUserNo, Nullable<System.DateTime> voucherDate, string amountIn_Words, string currency, string amount, string from, string transactionType, string updateuser_id, string updateuser_name, Nullable<bool> isApproved, string approvedBy, Nullable<int> approved_status, string rejectedBy, string bankName, string branch, string chequeNo, string dateOfCheque, string chequeAmount, string dateApprovedBy, string dateRejectedBy, string invoiceNo, string status, string narration, string update_UserID, string update_UserName, string remarks, Nullable<long> parentbank_id, string parentbank_code, Nullable<long> emp_id, Nullable<long> b_id, Nullable<long> as_id, Nullable<long> o_id, Nullable<long> project_id, string accountNumber, string accountName, Nullable<double> debitAmount, Nullable<double> creditAmount, string type, Nullable<long> accTrans_Id, Nullable<double> runningBalance, Nullable<long> cval, Nullable<long> mrow, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var voucherNoParameter = voucherNo.HasValue ?
                new ObjectParameter("VoucherNo", voucherNo) :
                new ObjectParameter("VoucherNo", typeof(long));
    
            var voucherUserNoParameter = voucherUserNo != null ?
                new ObjectParameter("VoucherUserNo", voucherUserNo) :
                new ObjectParameter("VoucherUserNo", typeof(string));
    
            var voucherDateParameter = voucherDate.HasValue ?
                new ObjectParameter("VoucherDate", voucherDate) :
                new ObjectParameter("VoucherDate", typeof(System.DateTime));
    
            var amountIn_WordsParameter = amountIn_Words != null ?
                new ObjectParameter("AmountIn_Words", amountIn_Words) :
                new ObjectParameter("AmountIn_Words", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var updateuser_idParameter = updateuser_id != null ?
                new ObjectParameter("updateuser_id", updateuser_id) :
                new ObjectParameter("updateuser_id", typeof(string));
    
            var updateuser_nameParameter = updateuser_name != null ?
                new ObjectParameter("updateuser_name", updateuser_name) :
                new ObjectParameter("updateuser_name", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var approvedByParameter = approvedBy != null ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(string));
    
            var approved_statusParameter = approved_status.HasValue ?
                new ObjectParameter("approved_status", approved_status) :
                new ObjectParameter("approved_status", typeof(int));
    
            var rejectedByParameter = rejectedBy != null ?
                new ObjectParameter("RejectedBy", rejectedBy) :
                new ObjectParameter("RejectedBy", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var chequeNoParameter = chequeNo != null ?
                new ObjectParameter("ChequeNo", chequeNo) :
                new ObjectParameter("ChequeNo", typeof(string));
    
            var dateOfChequeParameter = dateOfCheque != null ?
                new ObjectParameter("DateOfCheque", dateOfCheque) :
                new ObjectParameter("DateOfCheque", typeof(string));
    
            var chequeAmountParameter = chequeAmount != null ?
                new ObjectParameter("ChequeAmount", chequeAmount) :
                new ObjectParameter("ChequeAmount", typeof(string));
    
            var dateApprovedByParameter = dateApprovedBy != null ?
                new ObjectParameter("DateApprovedBy", dateApprovedBy) :
                new ObjectParameter("DateApprovedBy", typeof(string));
    
            var dateRejectedByParameter = dateRejectedBy != null ?
                new ObjectParameter("DateRejectedBy", dateRejectedBy) :
                new ObjectParameter("DateRejectedBy", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("invoiceNo", invoiceNo) :
                new ObjectParameter("invoiceNo", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("Narration", narration) :
                new ObjectParameter("Narration", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var parentbank_idParameter = parentbank_id.HasValue ?
                new ObjectParameter("parentbank_id", parentbank_id) :
                new ObjectParameter("parentbank_id", typeof(long));
    
            var parentbank_codeParameter = parentbank_code != null ?
                new ObjectParameter("parentbank_code", parentbank_code) :
                new ObjectParameter("parentbank_code", typeof(string));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var as_idParameter = as_id.HasValue ?
                new ObjectParameter("As_id", as_id) :
                new ObjectParameter("As_id", typeof(long));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var debitAmountParameter = debitAmount.HasValue ?
                new ObjectParameter("DebitAmount", debitAmount) :
                new ObjectParameter("DebitAmount", typeof(double));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(double));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var accTrans_IdParameter = accTrans_Id.HasValue ?
                new ObjectParameter("AccTrans_Id", accTrans_Id) :
                new ObjectParameter("AccTrans_Id", typeof(long));
    
            var runningBalanceParameter = runningBalance.HasValue ?
                new ObjectParameter("RunningBalance", runningBalance) :
                new ObjectParameter("RunningBalance", typeof(double));
    
            var cvalParameter = cval.HasValue ?
                new ObjectParameter("cval", cval) :
                new ObjectParameter("cval", typeof(long));
    
            var mrowParameter = mrow.HasValue ?
                new ObjectParameter("mrow", mrow) :
                new ObjectParameter("mrow", typeof(long));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcessReciptVouchers", voucherNoParameter, voucherUserNoParameter, voucherDateParameter, amountIn_WordsParameter, currencyParameter, amountParameter, fromParameter, transactionTypeParameter, updateuser_idParameter, updateuser_nameParameter, isApprovedParameter, approvedByParameter, approved_statusParameter, rejectedByParameter, bankNameParameter, branchParameter, chequeNoParameter, dateOfChequeParameter, chequeAmountParameter, dateApprovedByParameter, dateRejectedByParameter, invoiceNoParameter, statusParameter, narrationParameter, update_UserIDParameter, update_UserNameParameter, remarksParameter, parentbank_idParameter, parentbank_codeParameter, emp_idParameter, b_idParameter, as_idParameter, o_idParameter, project_idParameter, accountNumberParameter, accountNameParameter, debitAmountParameter, creditAmountParameter, typeParameter, accTrans_IdParameter, runningBalanceParameter, cvalParameter, mrowParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_ProcessServiceApprovals(Nullable<long> approvallevel_Id, Nullable<long> employee_id, string service_id, string delay_hours, string levelof_approval, string update_UserID, string update_UserName, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> endDate, Nullable<long> eService_id, string eService_name, string eService_type, Nullable<System.DateTime> from_dt, Nullable<System.DateTime> end_dt, Nullable<long> group_Id, Nullable<long> grpSerMap_id, Nullable<long> user_Id, Nullable<bool> eService_status, Nullable<long> createdby, string action)
        {
            var approvallevel_IdParameter = approvallevel_Id.HasValue ?
                new ObjectParameter("Approvallevel_Id", approvallevel_Id) :
                new ObjectParameter("Approvallevel_Id", typeof(long));
    
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(long));
    
            var service_idParameter = service_id != null ?
                new ObjectParameter("Service_id", service_id) :
                new ObjectParameter("Service_id", typeof(string));
    
            var delay_hoursParameter = delay_hours != null ?
                new ObjectParameter("delay_hours", delay_hours) :
                new ObjectParameter("delay_hours", typeof(string));
    
            var levelof_approvalParameter = levelof_approval != null ?
                new ObjectParameter("levelof_approval", levelof_approval) :
                new ObjectParameter("levelof_approval", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var eService_idParameter = eService_id.HasValue ?
                new ObjectParameter("eService_id", eService_id) :
                new ObjectParameter("eService_id", typeof(long));
    
            var eService_nameParameter = eService_name != null ?
                new ObjectParameter("eService_name", eService_name) :
                new ObjectParameter("eService_name", typeof(string));
    
            var eService_typeParameter = eService_type != null ?
                new ObjectParameter("eService_type", eService_type) :
                new ObjectParameter("eService_type", typeof(string));
    
            var from_dtParameter = from_dt.HasValue ?
                new ObjectParameter("from_dt", from_dt) :
                new ObjectParameter("from_dt", typeof(System.DateTime));
    
            var end_dtParameter = end_dt.HasValue ?
                new ObjectParameter("end_dt", end_dt) :
                new ObjectParameter("end_dt", typeof(System.DateTime));
    
            var group_IdParameter = group_Id.HasValue ?
                new ObjectParameter("Group_Id", group_Id) :
                new ObjectParameter("Group_Id", typeof(long));
    
            var grpSerMap_idParameter = grpSerMap_id.HasValue ?
                new ObjectParameter("GrpSerMap_id", grpSerMap_id) :
                new ObjectParameter("GrpSerMap_id", typeof(long));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(long));
    
            var eService_statusParameter = eService_status.HasValue ?
                new ObjectParameter("eService_status", eService_status) :
                new ObjectParameter("eService_status", typeof(bool));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(long));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_ProcessServiceApprovals", approvallevel_IdParameter, employee_idParameter, service_idParameter, delay_hoursParameter, levelof_approvalParameter, update_UserIDParameter, update_UserNameParameter, fromDateParameter, endDateParameter, eService_idParameter, eService_nameParameter, eService_typeParameter, from_dtParameter, end_dtParameter, group_IdParameter, grpSerMap_idParameter, user_IdParameter, eService_statusParameter, createdbyParameter, actionParameter);
        }
    
        public virtual int usp_ProcessUserChartOfAccount(string accountNumber, string accountName, string accountType, Nullable<double> opening_Bal, Nullable<double> budget_Amount, Nullable<double> actual_Amount, string create_UserID, string create_UserName, Nullable<long> ep_id, Nullable<long> emp_id, Nullable<long> b_id, Nullable<long> o_id, string accountGroupCode, string parentGroup, Nullable<long> id, Nullable<double> currentLedgerBalance, Nullable<long> project_id, Nullable<double> opening_Balance_Imported, Nullable<long> accTrans_Id, string voucherNumber, Nullable<double> debitAmount, Nullable<double> creditAmount, Nullable<double> runningBalance, Nullable<long> supp_id, Nullable<long> cust_id, Nullable<long> asset_id, string type, Nullable<long> itemgroup_id, string itemGroupID, string itemGroupDescription, Nullable<System.DateTime> fromdt, Nullable<System.DateTime> enddt, Nullable<long> itemcat_id, string itemCategoryID, string itemCategoryDescription, Nullable<long> stockitem_id, string itemCode, string itemName, string unitOfMeasure, Nullable<decimal> rate, string sIStatus, string openingBalance, string reorderLevelQuantity, string closing_Balance, Nullable<decimal> gSTRate, Nullable<System.DateTime> gST_Rate_Effective_Date, string update_UserID, string update_UserName, Nullable<System.DateTime> trans_date, string narration, string narrationseg, Nullable<long> as_id, Nullable<int> mRow, Nullable<int> cval, string currency, string enterpriseID, string employerID, string branchId, string org_ID, string projectID, Nullable<long> account_id, Nullable<int> approved_status, Nullable<int> pgNo, Nullable<int> pgSize, string action)
        {
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var opening_BalParameter = opening_Bal.HasValue ?
                new ObjectParameter("Opening_Bal", opening_Bal) :
                new ObjectParameter("Opening_Bal", typeof(double));
    
            var budget_AmountParameter = budget_Amount.HasValue ?
                new ObjectParameter("Budget_Amount", budget_Amount) :
                new ObjectParameter("Budget_Amount", typeof(double));
    
            var actual_AmountParameter = actual_Amount.HasValue ?
                new ObjectParameter("Actual_Amount", actual_Amount) :
                new ObjectParameter("Actual_Amount", typeof(double));
    
            var create_UserIDParameter = create_UserID != null ?
                new ObjectParameter("Create_UserID", create_UserID) :
                new ObjectParameter("Create_UserID", typeof(string));
    
            var create_UserNameParameter = create_UserName != null ?
                new ObjectParameter("Create_UserName", create_UserName) :
                new ObjectParameter("Create_UserName", typeof(string));
    
            var ep_idParameter = ep_id.HasValue ?
                new ObjectParameter("Ep_id", ep_id) :
                new ObjectParameter("Ep_id", typeof(long));
    
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(long));
    
            var b_idParameter = b_id.HasValue ?
                new ObjectParameter("b_id", b_id) :
                new ObjectParameter("b_id", typeof(long));
    
            var o_idParameter = o_id.HasValue ?
                new ObjectParameter("o_id", o_id) :
                new ObjectParameter("o_id", typeof(long));
    
            var accountGroupCodeParameter = accountGroupCode != null ?
                new ObjectParameter("AccountGroupCode", accountGroupCode) :
                new ObjectParameter("AccountGroupCode", typeof(string));
    
            var parentGroupParameter = parentGroup != null ?
                new ObjectParameter("ParentGroup", parentGroup) :
                new ObjectParameter("ParentGroup", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var currentLedgerBalanceParameter = currentLedgerBalance.HasValue ?
                new ObjectParameter("CurrentLedgerBalance", currentLedgerBalance) :
                new ObjectParameter("CurrentLedgerBalance", typeof(double));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var opening_Balance_ImportedParameter = opening_Balance_Imported.HasValue ?
                new ObjectParameter("Opening_Balance_Imported", opening_Balance_Imported) :
                new ObjectParameter("Opening_Balance_Imported", typeof(double));
    
            var accTrans_IdParameter = accTrans_Id.HasValue ?
                new ObjectParameter("AccTrans_Id", accTrans_Id) :
                new ObjectParameter("AccTrans_Id", typeof(long));
    
            var voucherNumberParameter = voucherNumber != null ?
                new ObjectParameter("VoucherNumber", voucherNumber) :
                new ObjectParameter("VoucherNumber", typeof(string));
    
            var debitAmountParameter = debitAmount.HasValue ?
                new ObjectParameter("DebitAmount", debitAmount) :
                new ObjectParameter("DebitAmount", typeof(double));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(double));
    
            var runningBalanceParameter = runningBalance.HasValue ?
                new ObjectParameter("RunningBalance", runningBalance) :
                new ObjectParameter("RunningBalance", typeof(double));
    
            var supp_idParameter = supp_id.HasValue ?
                new ObjectParameter("supp_id", supp_id) :
                new ObjectParameter("supp_id", typeof(long));
    
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(long));
    
            var asset_idParameter = asset_id.HasValue ?
                new ObjectParameter("asset_id", asset_id) :
                new ObjectParameter("asset_id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var itemgroup_idParameter = itemgroup_id.HasValue ?
                new ObjectParameter("itemgroup_id", itemgroup_id) :
                new ObjectParameter("itemgroup_id", typeof(long));
    
            var itemGroupIDParameter = itemGroupID != null ?
                new ObjectParameter("ItemGroupID", itemGroupID) :
                new ObjectParameter("ItemGroupID", typeof(string));
    
            var itemGroupDescriptionParameter = itemGroupDescription != null ?
                new ObjectParameter("ItemGroupDescription", itemGroupDescription) :
                new ObjectParameter("ItemGroupDescription", typeof(string));
    
            var fromdtParameter = fromdt.HasValue ?
                new ObjectParameter("fromdt", fromdt) :
                new ObjectParameter("fromdt", typeof(System.DateTime));
    
            var enddtParameter = enddt.HasValue ?
                new ObjectParameter("enddt", enddt) :
                new ObjectParameter("enddt", typeof(System.DateTime));
    
            var itemcat_idParameter = itemcat_id.HasValue ?
                new ObjectParameter("itemcat_id", itemcat_id) :
                new ObjectParameter("itemcat_id", typeof(long));
    
            var itemCategoryIDParameter = itemCategoryID != null ?
                new ObjectParameter("ItemCategoryID", itemCategoryID) :
                new ObjectParameter("ItemCategoryID", typeof(string));
    
            var itemCategoryDescriptionParameter = itemCategoryDescription != null ?
                new ObjectParameter("ItemCategoryDescription", itemCategoryDescription) :
                new ObjectParameter("ItemCategoryDescription", typeof(string));
    
            var stockitem_idParameter = stockitem_id.HasValue ?
                new ObjectParameter("stockitem_id", stockitem_id) :
                new ObjectParameter("stockitem_id", typeof(long));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var unitOfMeasureParameter = unitOfMeasure != null ?
                new ObjectParameter("UnitOfMeasure", unitOfMeasure) :
                new ObjectParameter("UnitOfMeasure", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var sIStatusParameter = sIStatus != null ?
                new ObjectParameter("SIStatus", sIStatus) :
                new ObjectParameter("SIStatus", typeof(string));
    
            var openingBalanceParameter = openingBalance != null ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(string));
    
            var reorderLevelQuantityParameter = reorderLevelQuantity != null ?
                new ObjectParameter("ReorderLevelQuantity", reorderLevelQuantity) :
                new ObjectParameter("ReorderLevelQuantity", typeof(string));
    
            var closing_BalanceParameter = closing_Balance != null ?
                new ObjectParameter("Closing_Balance", closing_Balance) :
                new ObjectParameter("Closing_Balance", typeof(string));
    
            var gSTRateParameter = gSTRate.HasValue ?
                new ObjectParameter("GSTRate", gSTRate) :
                new ObjectParameter("GSTRate", typeof(decimal));
    
            var gST_Rate_Effective_DateParameter = gST_Rate_Effective_Date.HasValue ?
                new ObjectParameter("GST_Rate_Effective_Date", gST_Rate_Effective_Date) :
                new ObjectParameter("GST_Rate_Effective_Date", typeof(System.DateTime));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var trans_dateParameter = trans_date.HasValue ?
                new ObjectParameter("trans_date", trans_date) :
                new ObjectParameter("trans_date", typeof(System.DateTime));
    
            var narrationParameter = narration != null ?
                new ObjectParameter("narration", narration) :
                new ObjectParameter("narration", typeof(string));
    
            var narrationsegParameter = narrationseg != null ?
                new ObjectParameter("Narrationseg", narrationseg) :
                new ObjectParameter("Narrationseg", typeof(string));
    
            var as_idParameter = as_id.HasValue ?
                new ObjectParameter("As_id", as_id) :
                new ObjectParameter("As_id", typeof(long));
    
            var mRowParameter = mRow.HasValue ?
                new ObjectParameter("mRow", mRow) :
                new ObjectParameter("mRow", typeof(int));
    
            var cvalParameter = cval.HasValue ?
                new ObjectParameter("cval", cval) :
                new ObjectParameter("cval", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(string));
    
            var enterpriseIDParameter = enterpriseID != null ?
                new ObjectParameter("EnterpriseID", enterpriseID) :
                new ObjectParameter("EnterpriseID", typeof(string));
    
            var employerIDParameter = employerID != null ?
                new ObjectParameter("EmployerID", employerID) :
                new ObjectParameter("EmployerID", typeof(string));
    
            var branchIdParameter = branchId != null ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(string));
    
            var org_IDParameter = org_ID != null ?
                new ObjectParameter("Org_ID", org_ID) :
                new ObjectParameter("Org_ID", typeof(string));
    
            var projectIDParameter = projectID != null ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(string));
    
            var account_idParameter = account_id.HasValue ?
                new ObjectParameter("Account_id", account_id) :
                new ObjectParameter("Account_id", typeof(long));
    
            var approved_statusParameter = approved_status.HasValue ?
                new ObjectParameter("approved_status", approved_status) :
                new ObjectParameter("approved_status", typeof(int));
    
            var pgNoParameter = pgNo.HasValue ?
                new ObjectParameter("PgNo", pgNo) :
                new ObjectParameter("PgNo", typeof(int));
    
            var pgSizeParameter = pgSize.HasValue ?
                new ObjectParameter("PgSize", pgSize) :
                new ObjectParameter("PgSize", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProcessUserChartOfAccount", accountNumberParameter, accountNameParameter, accountTypeParameter, opening_BalParameter, budget_AmountParameter, actual_AmountParameter, create_UserIDParameter, create_UserNameParameter, ep_idParameter, emp_idParameter, b_idParameter, o_idParameter, accountGroupCodeParameter, parentGroupParameter, idParameter, currentLedgerBalanceParameter, project_idParameter, opening_Balance_ImportedParameter, accTrans_IdParameter, voucherNumberParameter, debitAmountParameter, creditAmountParameter, runningBalanceParameter, supp_idParameter, cust_idParameter, asset_idParameter, typeParameter, itemgroup_idParameter, itemGroupIDParameter, itemGroupDescriptionParameter, fromdtParameter, enddtParameter, itemcat_idParameter, itemCategoryIDParameter, itemCategoryDescriptionParameter, stockitem_idParameter, itemCodeParameter, itemNameParameter, unitOfMeasureParameter, rateParameter, sIStatusParameter, openingBalanceParameter, reorderLevelQuantityParameter, closing_BalanceParameter, gSTRateParameter, gST_Rate_Effective_DateParameter, update_UserIDParameter, update_UserNameParameter, trans_dateParameter, narrationParameter, narrationsegParameter, as_idParameter, mRowParameter, cvalParameter, currencyParameter, enterpriseIDParameter, employerIDParameter, branchIdParameter, org_IDParameter, projectIDParameter, account_idParameter, approved_statusParameter, pgNoParameter, pgSizeParameter, actionParameter);
        }
    
        public virtual ObjectResult<usp_ProcessUserDetails_Result> usp_ProcessUserDetails(string user_id, string password, Nullable<long> e_id, string e_name, Nullable<long> createdby, Nullable<long> userGrp_id, string group_Id, string group_name, string group_type, string group_lang, string update_UserID, string update_UserName, string user_name, string cnfPassword, string hint_Name, string email, Nullable<System.DateTime> from_dt, Nullable<System.DateTime> end_dt, string mobile_NO, Nullable<long> eservice_id, string eservice_name, string eservice_type, Nullable<long> hint_id, Nullable<long> employee_id, string action)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var e_idParameter = e_id.HasValue ?
                new ObjectParameter("e_id", e_id) :
                new ObjectParameter("e_id", typeof(long));
    
            var e_nameParameter = e_name != null ?
                new ObjectParameter("e_name", e_name) :
                new ObjectParameter("e_name", typeof(string));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(long));
    
            var userGrp_idParameter = userGrp_id.HasValue ?
                new ObjectParameter("UserGrp_id", userGrp_id) :
                new ObjectParameter("UserGrp_id", typeof(long));
    
            var group_IdParameter = group_Id != null ?
                new ObjectParameter("Group_Id", group_Id) :
                new ObjectParameter("Group_Id", typeof(string));
    
            var group_nameParameter = group_name != null ?
                new ObjectParameter("Group_name", group_name) :
                new ObjectParameter("Group_name", typeof(string));
    
            var group_typeParameter = group_type != null ?
                new ObjectParameter("group_type", group_type) :
                new ObjectParameter("group_type", typeof(string));
    
            var group_langParameter = group_lang != null ?
                new ObjectParameter("Group_lang", group_lang) :
                new ObjectParameter("Group_lang", typeof(string));
    
            var update_UserIDParameter = update_UserID != null ?
                new ObjectParameter("Update_UserID", update_UserID) :
                new ObjectParameter("Update_UserID", typeof(string));
    
            var update_UserNameParameter = update_UserName != null ?
                new ObjectParameter("Update_UserName", update_UserName) :
                new ObjectParameter("Update_UserName", typeof(string));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("User_name", user_name) :
                new ObjectParameter("User_name", typeof(string));
    
            var cnfPasswordParameter = cnfPassword != null ?
                new ObjectParameter("CnfPassword", cnfPassword) :
                new ObjectParameter("CnfPassword", typeof(string));
    
            var hint_NameParameter = hint_Name != null ?
                new ObjectParameter("Hint_Name", hint_Name) :
                new ObjectParameter("Hint_Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var from_dtParameter = from_dt.HasValue ?
                new ObjectParameter("from_dt", from_dt) :
                new ObjectParameter("from_dt", typeof(System.DateTime));
    
            var end_dtParameter = end_dt.HasValue ?
                new ObjectParameter("end_dt", end_dt) :
                new ObjectParameter("end_dt", typeof(System.DateTime));
    
            var mobile_NOParameter = mobile_NO != null ?
                new ObjectParameter("Mobile_NO", mobile_NO) :
                new ObjectParameter("Mobile_NO", typeof(string));
    
            var eservice_idParameter = eservice_id.HasValue ?
                new ObjectParameter("Eservice_id", eservice_id) :
                new ObjectParameter("Eservice_id", typeof(long));
    
            var eservice_nameParameter = eservice_name != null ?
                new ObjectParameter("Eservice_name", eservice_name) :
                new ObjectParameter("Eservice_name", typeof(string));
    
            var eservice_typeParameter = eservice_type != null ?
                new ObjectParameter("Eservice_type", eservice_type) :
                new ObjectParameter("Eservice_type", typeof(string));
    
            var hint_idParameter = hint_id.HasValue ?
                new ObjectParameter("Hint_id", hint_id) :
                new ObjectParameter("Hint_id", typeof(long));
    
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(long));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProcessUserDetails_Result>("usp_ProcessUserDetails", user_idParameter, passwordParameter, e_idParameter, e_nameParameter, createdbyParameter, userGrp_idParameter, group_IdParameter, group_nameParameter, group_typeParameter, group_langParameter, update_UserIDParameter, update_UserNameParameter, user_nameParameter, cnfPasswordParameter, hint_NameParameter, emailParameter, from_dtParameter, end_dtParameter, mobile_NOParameter, eservice_idParameter, eservice_nameParameter, eservice_typeParameter, hint_idParameter, employee_idParameter, actionParameter);
        }
    }
}
